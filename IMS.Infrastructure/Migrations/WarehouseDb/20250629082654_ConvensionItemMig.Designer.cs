// <auto-generated />
using System;
using IMS.Infrastructure.Persistence.WarehouseManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMS.Infrastructure.Migrations.WarehouseDb
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20250629082654_ConvensionItemMig")]
    partial class ConvensionItemMig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ConversionConsumedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConversionDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("conversionConsumedItems");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ConversionProducedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConversionDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("conversionProducedItems");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SectionId");

                    b.HasIndex("ZoneId");

                    b.HasIndex("WarehouseId", "ZoneId", "SectionId", "ProductId")
                        .IsUnique()
                        .HasFilter("[ZoneId] IS NOT NULL AND [SectionId] IS NOT NULL");

                    b.ToTable("Inventories", (string)null);
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("StatusId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ReceiptOrIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReceiptOrIssues");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ReceiptOrIssueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinationSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinationWarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinationZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceiptOrIssueId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceWarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceZoneId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DestinationSectionId");

                    b.HasIndex("DestinationWarehouseId");

                    b.HasIndex("DestinationZoneId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptOrIssueId");

                    b.HasIndex("SourceSectionId");

                    b.HasIndex("SourceWarehouseId");

                    b.HasIndex("SourceZoneId");

                    b.HasIndex("StatusId");

                    b.ToTable("ReceiptOrIssueItems");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Capacity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionCode")
                        .IsUnique();

                    b.HasIndex("ZoneId");

                    b.ToTable("StorageSections");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("ZoneCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("ZoneCode")
                        .IsUnique();

                    b.ToTable("StorageZones");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Manager")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StorageConditions")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Group", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Category", "Category")
                        .WithMany("Groups")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Inventory", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageSection", "Section")
                        .WithMany("Inventories")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Warehouse", "Warehouse")
                        .WithMany("Inventories")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageZone", "Zone")
                        .WithMany("Inventories")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Product");

                    b.Navigation("Section");

                    b.Navigation("Warehouse");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Product", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ReceiptOrIssueItem", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageSection", "DestinationSection")
                        .WithMany()
                        .HasForeignKey("DestinationSectionId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Warehouse", "DestinationWarehouse")
                        .WithMany()
                        .HasForeignKey("DestinationWarehouseId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageZone", "DestinationZone")
                        .WithMany()
                        .HasForeignKey("DestinationZoneId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.ReceiptOrIssue", "ReceiptOrIssue")
                        .WithMany("Items")
                        .HasForeignKey("ReceiptOrIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageSection", "SourceSection")
                        .WithMany()
                        .HasForeignKey("SourceSectionId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Warehouse", "SourceWarehouse")
                        .WithMany()
                        .HasForeignKey("SourceWarehouseId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageZone", "SourceZone")
                        .WithMany()
                        .HasForeignKey("SourceZoneId");

                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Category");

                    b.Navigation("DestinationSection");

                    b.Navigation("DestinationWarehouse");

                    b.Navigation("DestinationZone");

                    b.Navigation("Group");

                    b.Navigation("Product");

                    b.Navigation("ReceiptOrIssue");

                    b.Navigation("SourceSection");

                    b.Navigation("SourceWarehouse");

                    b.Navigation("SourceZone");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Status", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Group", "Group")
                        .WithMany("Statuses")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageSection", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.StorageZone", "Zone")
                        .WithMany("Sections")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageZone", b =>
                {
                    b.HasOne("IMS.Domain.WarehouseManagement.Entities.Warehouse", "Warehouse")
                        .WithMany("Zones")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Category", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Group", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Product", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.ReceiptOrIssue", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Status", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageSection", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.StorageZone", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("IMS.Domain.WarehouseManagement.Entities.Warehouse", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
