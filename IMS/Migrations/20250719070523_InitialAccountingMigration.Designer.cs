// <auto-generated />
using System;
using IMS.Areas.AccountManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMS.Migrations
{
    [DbContext(typeof(AccountManagementDbContext))]
    [Migration("20250719070523_InitialAccountingMigration")]
    partial class InitialAccountingMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Moein", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Moeins");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.SecondTafzil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TafzilId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("TafzilId");

                    b.ToTable("SecondTafzils");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Tafzil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MoeinId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MoeinId");

                    b.ToTable("Tafzils");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MoeinId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondTafzilId")
                        .HasColumnType("int");

                    b.Property<int?>("TafzilId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("MoeinId");

                    b.HasIndex("SecondTafzilId");

                    b.HasIndex("TafzilId");

                    b.HasIndex("TransactionDocumentId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.TransactionDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("TransactionDocuments");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Moein", b =>
                {
                    b.HasOne("IMS.Areas.AccountManagement.Models.Account", "Account")
                        .WithMany("Moeins")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.SecondTafzil", b =>
                {
                    b.HasOne("IMS.Areas.AccountManagement.Models.CostCenter", "CostCenter")
                        .WithMany("SecondTafzils")
                        .HasForeignKey("CostCenterId");

                    b.HasOne("IMS.Areas.AccountManagement.Models.Tafzil", "Tafzil")
                        .WithMany("SecondTafzils")
                        .HasForeignKey("TafzilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("Tafzil");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Tafzil", b =>
                {
                    b.HasOne("IMS.Areas.AccountManagement.Models.Moein", "Moein")
                        .WithMany("Tafzils")
                        .HasForeignKey("MoeinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moein");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Transaction", b =>
                {
                    b.HasOne("IMS.Areas.AccountManagement.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Areas.AccountManagement.Models.CostCenter", "CostCenter")
                        .WithMany("Transactions")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IMS.Areas.AccountManagement.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMS.Areas.AccountManagement.Models.Moein", "Moein")
                        .WithMany("Transactions")
                        .HasForeignKey("MoeinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IMS.Areas.AccountManagement.Models.SecondTafzil", "SecondTafzil")
                        .WithMany("Transactions")
                        .HasForeignKey("SecondTafzilId");

                    b.HasOne("IMS.Areas.AccountManagement.Models.Tafzil", "Tafzil")
                        .WithMany("Transactions")
                        .HasForeignKey("TafzilId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IMS.Areas.AccountManagement.Models.TransactionDocument", "TransactionDocument")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionDocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DocumentType");

                    b.Navigation("Moein");

                    b.Navigation("SecondTafzil");

                    b.Navigation("Tafzil");

                    b.Navigation("TransactionDocument");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.TransactionDocument", b =>
                {
                    b.HasOne("IMS.Areas.AccountManagement.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Account", b =>
                {
                    b.Navigation("Moeins");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.CostCenter", b =>
                {
                    b.Navigation("SecondTafzils");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Moein", b =>
                {
                    b.Navigation("Tafzils");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.SecondTafzil", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.Tafzil", b =>
                {
                    b.Navigation("SecondTafzils");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("IMS.Areas.AccountManagement.Models.TransactionDocument", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
