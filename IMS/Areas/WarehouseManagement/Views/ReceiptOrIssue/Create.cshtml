@using IMS.Domain.WarehouseManagement.Enums
@using IMS.Models.ProMan
@model ReceiptOrIssueViewModel
@{
    ViewData["Title"] = "ایجاد رسید / حواله / انتقال";
    Layout = "~/Areas/WarehouseManagement/Views/Shared/_MyLayout.cshtml";
}
<style>

    select.form-select[dir="rtl"],
    select.form-select.text-end {
        direction: rtl;
        text-align: right;
        padding-right: 1rem;
        padding-left: 2rem;
        background-position: left 0.75rem center !important;
        background-size: 16px 16px;
        background-repeat: no-repeat;
    }

    select.form-select,
    select.select2-hidden-accessible {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-image: none !important;
    }


    .table-sm-custom {
        font-size: 0.85rem;
    }

        .table-sm-custom .form-select,
        .table-sm-custom .form-control {
            font-size: 0.85rem;
            padding: 0.25rem 0.5rem;
            height: auto;
        }

        .table-sm-custom label,
        .table-sm-custom .accordion-button {
            font-size: 0.82rem;
        }

        .table-sm-custom .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
        }

        .table-sm-custom .accordion-body {
            padding: 0.5rem;
        }

    .btn-icon {
        width: 32px;
        height: 32px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
    }

</style>

<!-- Select2 CSS -->
<link href="~/lib/select2/css/select2.min.css" rel="stylesheet" />
<link href="~/lib/select2-bootstrap5-theme/select2-bootstrap5.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">


<div class="card border-0 shadow-sm" dir="rtl">
    <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
        <div class="d-flex align-items-center">
            <i class="fas fa-plus-circle ms-1" style="font-size: 0.85rem;"></i>
            <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
        </div>
    </div>

    <div class="card-body p-2">
        <form asp-action="Create" method="post" id="receiptIssueForm">
            @Html.AntiForgeryToken()
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger small py-2 px-3 mb-3 text-end">
                    <strong class="d-block mb-1">خطا!</strong>
                    @Html.ValidationSummary(true)
                </div>
            }

            <div class="row g-2 mb-3">
                <div class="col-md-3">
                    <label asp-for="DateString" class="form-label fw-bold small text-end w-100">تاریخ</label>
                    <div class="input-group input-group-sm">
                        <input asp-for="DateString" class="form-control persian-datepicker text-end" placeholder="تاریخ را انتخاب کنید" />
                        <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                    </div>
                    <span asp-validation-for="DateString" class="text-danger small d-block text-end"></span>
                </div>

                <div class="col-md-3">
                    <label asp-for="DocumentNumber" class="form-label fw-bold small text-end w-100">شماره سند</label>
                    <div class="input-group input-group-sm">
                        <input asp-for="DocumentNumber" class="form-control text-end" placeholder="شماره سند را وارد کنید" />
                        <span class="input-group-text"><i class="bi bi-file-earmark-text"></i></span>
                    </div>
                    <span asp-validation-for="DocumentNumber" class="text-danger small d-block text-end"></span>
                </div>

                <div class="col-md-3">
                    <label asp-for="Type" class="form-label fw-bold small text-end w-100">نوع</label>
                    <select asp-for="Type" class="form-select form-select-sm text-end">
                        <option value="">انتخاب کنید...</option>
                        <option value="1">رسید</option>
                        <option value="2">حواله</option>
                        <option value="3">انتقال</option>
                    </select>
                    <span asp-validation-for="Type" class="text-danger small d-block text-end"></span>
                </div>

                @* <div class="col-md-3">
                    <label asp-for="ProjectId" class="form-label fw-bold small text-end w-100">پروژه</label>
                    <select asp-for="ProjectId" class="form-select form-select-sm select2-project" dir="rtl">
                        <option value="">انتخاب پروژه...</option>
                        @foreach (var item in ViewBag.Projects as SelectList)
                        {
                            <option value="@item.Value" selected="@(item.Value == Model.ProjectId?.ToString())">@item.Text</option>
                        }
                    </select>
                    <span asp-validation-for="ProjectId" class="text-danger small d-block text-end"></span>
                </div> *@
            </div>

            <hr class="my-3" />
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="fw-bold text-dark mb-0" style="font-size: 0.9rem;">آیتم‌ها</h6>
                <button type="button" id="addItemBtn" class="btn btn-sm btn-primary hide-on-print">
                    <i class="bi bi-plus-circle ms-1"></i> افزودن آیتم
                </button>
            </div>

            <div class="table-responsive border rounded-3 mb-3">
                <table class="table table-hover table-sm mb-0" id="itemsTable">
                    <thead class="table-light" style="font-size: 0.8rem;">
                        <tr class="text-center">
                            <th class="py-2">کالا</th>
                            <th class="py-2">تعداد</th>
                            <th class="py-2">مبدا</th>
                            <th class="py-2">مقصد</th>
                            <th class="py-2">پروژه</th>
                            <th class="py-2" style="width: 80px;">عملیات</th>
                        </tr>
                    </thead>
                    <tbody class="table-sm-custom">
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <tr class="align-middle" data-index="@i">
                                <!-- انتخاب کالا -->
                                <td>
                                    <div class="accordion" id="productAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#productCollapse_@i">
                                                    انتخاب کالا و مشخصات آن
                                                </button>
                                            </h2>
                                            <div id="productCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#productAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <select asp-for="Items[i].CategoryId" class="form-select form-select-sm category-select select2 shadow-sm item-select text-end" data-index="@i">
                                                        <option value="">انتخاب دسته‌بندی</option>
                                                        @foreach (var item in ViewBag.Categories as SelectList)
                                                        {
                                                            <option value="@item.Value" selected="@(item.Value == Model.Items[i].CategoryId.ToString())">@item.Text</option>
                                                        }
                                                    </select>

                                                    <select asp-for="Items[i].GroupId" class="form-select form-select-sm group-select select2 shadow-sm item-select mt-2 text-end" data-index="@i">
                                                        <option value="">انتخاب گروه</option>
                                                        @foreach (var group in Model.Items[i].AvailableGroups ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@group.Value" selected="@(group.Value == Model.Items[i].GroupId?.ToString())">@group.Text</option>
                                                        }
                                                    </select>

                                                    <select asp-for="Items[i].StatusId" class="form-select form-select-sm status-select mt-2 shadow-sm text-end" data-index="@i">
                                                        <option value="">انتخاب وضعیت</option>
                                                        @foreach (var status in Model.Items[i].AvailableStatuses ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@status.Value" selected="@(status.Value == Model.Items[i].StatusId?.ToString())">@status.Text</option>
                                                        }
                                                    </select>

                                                    <select asp-for="Items[i].ProductId" class="form-select form-select-sm product-select select2 shadow-sm mt-2 text-end" data-index="@i">
                                                        <option value="">انتخاب کالا</option>
                                                        @foreach (var product in Model.Items[i].AvailableProducts ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@product.Value" selected="@(product.Value == Model.Items[i].ProductId.ToString())">@product.Text</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>

                                <!-- تعداد -->
                                <td style="width: 120px;">
                                    <input asp-for="Items[i].Quantity" type="number" min="1" class="form-control form-control-sm shadow-sm no-spinner text-end" />
                                    <span asp-validation-for="Items[i].Quantity" class="text-danger small d-block mt-1 text-end"></span>
                                </td>

                                <!-- مبدا -->
                                <td>
                                    <div class="accordion" id="sourceAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#sourceCollapse_@i">
                                                    مشخصات مبدا
                                                </button>
                                            </h2>
                                            <div id="sourceCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#sourceAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                        <select asp-for="Items[i].SourceWarehouseId" class="form-select form-select-sm warehouse-select shadow-sm text-end" data-index="@i" data-type="source">
                                                            <option value="">انتخاب انبار</option>
                                                            @foreach (var item in ViewBag.Warehouses as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceWarehouseId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceWarehouseId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>

                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                        <select asp-for="Items[i].SourceZoneId" class="form-select form-select-sm zone-select shadow-sm text-end" data-index="@i" data-type="source">
                                                            <option value="">انتخاب قسمت</option>
                                                            @foreach (var item in ViewBag.Zones as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceZoneId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceZoneId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>

                                                    <div>
                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                        <select asp-for="Items[i].SourceSectionId" class="form-select form-select-sm section-select shadow-sm text-end" data-type="source">
                                                            <option value="">انتخاب بخش</option>
                                                            @foreach (var item in ViewBag.Sections as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceSectionId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceSectionId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>

                                <!-- مقصد -->
                                <td>
                                    <div class="accordion" id="destAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#destCollapse_@i">
                                                    مشخصات مقصد
                                                </button>
                                            </h2>
                                            <div id="destCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#destAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                        <select asp-for="Items[i].DestinationWarehouseId" class="form-select form-select-sm warehouse-select shadow-sm text-end" data-index="@i" data-type="destination">
                                                            <option value="">انتخاب انبار</option>
                                                            @foreach (var item in ViewBag.Warehouses as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationWarehouseId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationWarehouseId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>

                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                        <select asp-for="Items[i].DestinationZoneId" class="form-select form-select-sm zone-select shadow-sm text-end" data-index="@i" data-type="destination">
                                                            <option value="">انتخاب قسمت</option>
                                                            @foreach (var item in ViewBag.Zones as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationZoneId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationZoneId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>

                                                    <div>
                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                        <select asp-for="Items[i].DestinationSectionId" class="form-select form-select-sm section-select shadow-sm text-end" data-type="destination">
                                                            <option value="">انتخاب بخش</option>
                                                            @foreach (var item in ViewBag.Sections as SelectList)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationSectionId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationSectionId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <select asp-for="Items[i].ProjectId" class="form-select form-select-sm select2-project" dir="rtl" data-index="@i">
                                        <option value="">انتخاب پروژه...</option>
                                        @foreach (var project in Model.Items[i].AvailableProjects ?? new List<SelectListItem>())
                                        {
                                            <option value="@project.Value" selected="@(project.Value == Model.Items[i].ProjectId?.ToString())">@project.Text</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Items[i].ProjectId" class="text-danger small d-block text-end"></span>
                                </td>

                                <!-- دکمه‌ها -->
                                <td class="text-center">
                                    <div class="d-flex justify-content-center gap-1">
                                        <button type="button" class="btn btn-sm btn-icon btn-outline-success rounded-circle hide-on-print" title="ثبت">
                                            <i class="bi bi-check-lg"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-icon btn-outline-danger rounded-circle hide-on-print" title="حذف">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-start gap-2 mt-3">
                <a asp-action="Index" class="btn btn-sm btn-secondary px-3 hide-on-print">
                    <i class="bi bi-arrow-right-circle ms-1"></i> بازگشت
                </a>
                <button type="submit" class="btn btn-sm btn-success px-3 hide-on-print">
                    <i class="bi bi-check-circle ms-1"></i> ثبت
                </button>
            </div>
        </form>
    </div>
</div>




@section Scripts {
    <!-- در انتهای body یا بخش Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/select2/js/select2.full.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/MenuJs.js"></script>
    <script>

                      
        // ارسال داده‌های ViewBag به JS به صورت JSON
        const categories = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categories));
        const groups = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Groups));
        const statuses = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Statuses));
        const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Products));
        const warehouses = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Warehouses));
        const zones = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Zones));
        const sections = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Sections));
        const projects = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Projects));



                       $(document).ready(function () {
            $('.select2').select2({
                theme: 'bootstrap5',
                placeholder: 'انتخاب کنید',
                allowClear: true,
                dir: 'rtl', // اطمینان از پشتیبانی RTL
                minimumResultsForSearch: 0
            });
        });


        // ساخت گزینه‌ها
        function buildOptions(items) {
            return items.map(item => `<option value="${item.Value}">${item.Text}</option>`).join('');
        }

                  document.getElementById('addItemBtn').addEventListener('click', function () {
            const tableBody = document.querySelector('#itemsTable tbody');
            const rowCount = tableBody.querySelectorAll('tr.align-middle').length;

            const errorRow = `
                <tr class="validation-row" data-index="${rowCount}" style="display: none;">
                    <td colspan="5">
                        <div class="alert alert-danger error-message-list mb-0"></div>
                    </td>
                </tr>`;

            const template = `
                <tr class="align-middle" data-index="${rowCount}">
                    <td>
                        <div class="accordion" id="productAccordion_${rowCount}">
                            <div class="accordion-item border-0">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#productCollapse_${rowCount}">
                                        انتخاب کالا و مشخصات آن
                                    </button>
                                </h2>
                                <div id="productCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#productAccordion_${rowCount}">
                                    <div class="accordion-body p-2">
                                        <label class="form-label small text-muted mb-1">دسته بندی</label>
                                        <select name="Items[${rowCount}].CategoryId" class="form-select product-select select2 shadow-sm item-select" data-index="${rowCount}">
                                            <option value="">انتخاب دسته‌بندی</option>
                                            ${buildOptions(categories)}
                                        </select>
                                        <label class="form-label small text-muted mb-1">گروه</label>
                                        <select name="Items[${rowCount}].GroupId" class="form-select product-select select2 shadow-sm item-select" data-index="${rowCount}">
                                            <option value="">انتخاب گروه</option>
                                        </select>
                                        <label class="form-label small text-muted mb-1">طبقه</label>
                                        <select name="Items[${rowCount}].StatusId" class="form-select status-select mb-2" data-index="${rowCount}">
                                            <option value="">انتخاب طبقه</option>
                                        </select>
                                        <label class="form-label small text-muted mb-1">کالا</label>
                                        <select name="Items[${rowCount}].ProductId" class="form-select product-select select2 shadow-sm" data-index="${rowCount}">
                                            <option value="">انتخاب کالا</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td style="width: 120px;">
                            <input name="Items[${rowCount}].Quantity" type="number" min="1" class="form-control shadow-sm no-spinner" />
                            <span class="text-danger small d-block mt-1"></span>
                        </td>
                        <td>
                            <div class="accordion" id="sourceAccordion_${rowCount}">
                                <div class="accordion-item border-0">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#sourceCollapse_${rowCount}">
                                            مشخصات مبدا
                                        </button>
                                    </h2>
                                    <div id="sourceCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#sourceAccordion_${rowCount}">
                                        <div class="accordion-body p-2">
                                            <div class="mb-2">
                                                <label class="form-label small text-muted mb-1">انبار</label>
                                                <select name="Items[${rowCount}].SourceWarehouseId" class="form-select form-select-sm warehouse-select shadow-sm" data-index="${rowCount}" data-type="source">
                                                    <option value="">انتخاب انبار</option>
                                                    ${buildOptions(warehouses)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                            <div class="mb-2">
                                                <label class="form-label small text-muted mb-1">قسمت</label>
                                                <select name="Items[${rowCount}].SourceZoneId" class="form-select form-select-sm zone-select shadow-sm" data-type="source">
                                                    <option value="">انتخاب قسمت</option>
                                                    ${buildOptions(zones)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                            <div>
                                                <label class="form-label small text-muted mb-1">بخش</label>
                                                <select name="Items[${rowCount}].SourceSectionId" class="form-select form-select-sm section-select shadow-sm" data-type="source">
                                                    <option value="">انتخاب بخش</option>
                                                    ${buildOptions(sections)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="accordion" id="destAccordion_${rowCount}">
                                <div class="accordion-item border-0">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#destCollapse_${rowCount}">
                                            مشخصات مقصد
                                        </button>
                                    </h2>
                                    <div id="destCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#destAccordion_${rowCount}">
                                        <div class="accordion-body p-2">
                                            <div class="mb-2">
                                                <label class="form-label small text-muted mb-1">انبار</label>
                                                <select name="Items[${rowCount}].DestinationWarehouseId" class="form-select form-select-sm warehouse-select shadow-sm" data-index="${rowCount}" data-type="destination">
                                                    <option value="">انتخاب انبار</option>
                                                    ${buildOptions(warehouses)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                            <div class="mb-2">
                                                <label class="form-label small text-muted mb-1">قسمت</label>
                                                <select name="Items[${rowCount}].DestinationZoneId" class="form-select form-select-sm zone-select shadow-sm" data-index="${rowCount}" data-type="destination">
                                                    <option value="">انتخاب قسمت</option>
                                                    ${buildOptions(zones)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                            <div>
                                                <label class="form-label small text-muted mb-1">بخش</label>
                                                <select name="Items[${rowCount}].DestinationSectionId" class="form-select form-select-sm section-select shadow-sm" data-type="destination">
                                                    <option value="">انتخاب بخش</option>
                                                    ${buildOptions(sections)}
                                                </select>
                                                <span class="text-danger small d-block mt-1"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                                   <td>
                    <select name="Items[${rowCount}].ProjectId" class="form-select form-select-sm select2-project" dir="rtl" data-index="${rowCount}">
                        ${buildOptions(projects)}
                    </select>
                    <span class="text-danger small d-block text-end"></span>
                </td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center gap-1">
                                    <button type="button" class="btn btn-sm btn-icon btn-outline-success rounded-circle hide-on-print save-item" title="ثبت">
                                        <i class="bi bi-check-lg"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-icon btn-outline-danger rounded-circle hide-on-print remove-item" title="حذف">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>`;

            tableBody.insertAdjacentHTML('beforeend', errorRow);
            tableBody.insertAdjacentHTML('beforeend', template);

            const newRow = tableBody.querySelector(`tr.align-middle[data-index="${rowCount}"]`);
            const newErrorRow = tableBody.querySelector(`tr.validation-row[data-index="${rowCount}"]`);

            $(newRow).find('.select2').select2({
                theme: 'bootstrap5',
                placeholder: 'انتخاب کنید',
                allowClear: true,
                dir: 'rtl',
                minimumResultsForSearch: 0
            });
        });

        // مدیریت کلیک روی دکمه "ثبت"
        document.querySelector('#itemsTable').addEventListener('click', function (event) {
            if (event.target.closest('.save-item')) {
                const button = event.target.closest('.save-item');
                const row = button.closest('tr.align-middle');
                const rowIndex = row.dataset.index;
                validateRow(rowIndex);
            }
        });

        // تابع اعتبارسنجی
        function validateRow(rowIndex) {
            const row = document.querySelector(`tr.align-middle[data-index="${rowIndex}"]`);
            const errorRow = document.querySelector(`tr.validation-row[data-index="${rowIndex}"]`);
            const errorMessageList = errorRow.querySelector('.error-message-list');

            let errors = [];

            // بررسی فیلدهای مورد نیاز
            const category = row.querySelector(`select[name="Items[${rowIndex}].CategoryId"]`).value;
            const quantity = row.querySelector(`input[name="Items[${rowIndex}].Quantity"]`).value;
            const sourceWarehouse = row.querySelector(`select[name="Items[${rowIndex}].SourceWarehouseId"]`).value;
            const destWarehouse = row.querySelector(`select[name="Items[${rowIndex}].DestinationWarehouseId"]`).value;

            if (!category) errors.push('دسته‌بندی انتخاب نشده است.');
            if (!quantity || quantity <= 0) errors.push('تعداد باید بیشتر از صفر باشد.');
            if (!sourceWarehouse) errors.push('انبار مبدا انتخاب نشده است.');
            if (!destWarehouse) errors.push('انبار مقصد انتخاب نشده است.');

            // مدیریت نمایش ردیف خطا
            if (errors.length > 0) {
                errorMessageList.innerHTML = errors.map(error => `<p class="mb-0">${error}</p>`).join('');
                errorRow.style.display = 'table-row';
            } else {
                errorMessageList.innerHTML = '';
                errorRow.style.display = 'none';
            }
        }



        $(document).on('change', '.warehouse-select', function () {
            let $this = $(this);
            let index = $this.data('index');
            let type = $this.data('type');
            let warehouseId = $this.val();

            let zoneSelect = $(`select[name="Items[${index}].${capitalize(type)}ZoneId"]`);
            let sectionSelect = $(`select[name="Items[${index}].${capitalize(type)}SectionId"]`);

            if (!warehouseId) {
                zoneSelect.prop('disabled', true).empty().append($('<option>', { value: '', text: 'ابتدا انبار را انتخاب کنید' }));
                sectionSelect.prop('disabled', true).empty().append($('<option>', { value: '', text: 'ابتدا قسمت را انتخاب کنید' }));
                return;
            }

            $.ajax({
                url: '/WarehouseManagement/ReceiptOrIssue/GetZones',
                type: 'GET',
                data: { warehouseId: warehouseId },
                success: function (zones) {
                    if (zoneSelect.hasClass("select2-hidden-accessible")) {
                        zoneSelect.select2('destroy');
                    }
                     console.log("داده‌های zones:", zones);
                    zoneSelect.empty().append($('<option>', { value: '', text: 'انتخاب قسمت' }));
                            zones.forEach(zone => {
            zoneSelect.append($('<option>', { value: zone.value, text: zone.text }));
        });




                    zoneSelect.prop('disabled', false).select2({
                        theme: 'bootstrap5',
                        placeholder: 'انتخاب قسمت',
                        allowClear: true
                    });

                    sectionSelect.prop('disabled', true).empty().append($('<option>', { value: '', text: 'ابتدا قسمت را انتخاب کنید' }));
                },
                error: function () {
                    alert('خطا در بارگذاری قسمت‌ها. لطفاً دوباره تلاش کنید.');
                }
            });
        });

        $(document).on('change', '.zone-select', function () {
            let $this = $(this);
            let nameAttr = $this.attr('name');
            console.log("🔄 zone-select changed:", nameAttr);

            let match = nameAttr.match(/Items\[(\d+)\]\.(Source|Destination)ZoneId/);
            if (!match) {
                console.warn("⚠️ نام المنت با الگوی مورد انتظار مطابقت ندارد:", nameAttr);
                return;
            }

            let index = match[1];
            let type = match[2].toLowerCase();
            let zoneId = $this.val();

            console.log(`📌 index: ${index}, type: ${type}, zoneId: ${zoneId}`);

            let sectionSelect = $(`select[name="Items[${index}].${capitalize(type)}SectionId"]`);
            console.log("🎯 یافتن SectionSelect:", sectionSelect.length ? sectionSelect : "❌ پیدا نشد");

            if (!zoneId) {
                console.log("🚫 zoneId خالی است، غیرفعال‌سازی لیست بخش‌ها");
                sectionSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا قسمت را انتخاب کنید'
                }));
                return;
            }

            $.ajax({
                url: '/WarehouseManagement/ReceiptOrIssue/GetSections',
                type: 'GET',
                data: { zoneId: zoneId },
                beforeSend: function () {
                    console.log("📡 درخواست ارسال شد به سرور برای zoneId:", zoneId);
                },
                success: function (sections) {
                    console.log("✅ دریافت لیست بخش‌ها:", sections);
                    sectionSelect.empty().append($('<option>', {
                        value: '',
                        text: 'انتخاب بخش'
                    }));
                    sections.forEach(section => {
                        sectionSelect.append($('<option>', {
                            value: section.value,
                            text: section.text
                        }));
                    });
                    sectionSelect.prop('disabled', false).select2({
                        theme: 'bootstrap5',
                        placeholder: 'انتخاب بخش',
                        allowClear: true
                    });
                },
                error: function (xhr, status, error) {
                    console.error("❌ خطا در Ajax:", status, error);
                    alert('خطا در بارگذاری بخش‌ها. لطفاً دوباره تلاش کنید.');
                }
            });
        });

                       // تابع کمکی برای بزرگ کردن حرف اول
        function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }


                $(document).on('change', '.item-select[name$="CategoryId"]', function () {
            let $this = $(this);
            let index = $this.data('index');
            let categoryId = $this.val();



            let groupSelect = $(`select[name="Items[${index}].GroupId"]`);
            let statusSelect = $(`select[name="Items[${index}].StatusId"]`);
            let productSelect = $(`select[name="Items[${index}].ProductId"]`);

            console.log(`Selectors found: groupSelect=${groupSelect.length}, statusSelect=${statusSelect.length}, productSelect=${productSelect.length}`);

            // Reset dependent dropdowns
            if (groupSelect.length) {
                if (groupSelect.hasClass('select2-hidden-accessible')) {
                    groupSelect.select2('destroy');
                    console.log('🚀 select2 destroyed on groupSelect');
                }
                groupSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا دسته‌بندی را انتخاب کنید'
                }));
            }

            if (statusSelect.length) {
                if (statusSelect.hasClass('select2-hidden-accessible')) {
                    statusSelect.select2('destroy');
                    console.log('🚀 select2 destroyed on statusSelect');
                }
                statusSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا گروه را انتخاب کنید'
                }));
            }

            if (productSelect.length) {
                if (productSelect.hasClass('select2-hidden-accessible')) {
                    productSelect.select2('destroy');
                    console.log('🚀 select2 destroyed on productSelect');
                }
                productSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا وضعیت را انتخاب کنید'
                }));
            }

            if (!categoryId) {
                console.log('⚠️ دسته‌بندی انتخاب نشده، عملیات متوقف شد.');
                return;
            }

            $.ajax({
                url: '/WarehouseManagement/ReceiptOrIssue/GetGroups',
                type: 'GET',
                data: { categoryId: categoryId },
                success: function (groups) {
                    console.log('✅ دریافت گروه‌ها:', groups);

                    if (groupSelect.length) {
                        groupSelect.empty().append($('<option>', {
                            value: '',
                            text: 'انتخاب گروه'
                        }));

                        if (groups && groups.length) {
                            groups.forEach(function (group) {
                                groupSelect.append($('<option>', {
                                    value: group.value,
                                    text: group.text
                                }));
                                console.log(`   افزودن گروه: value=${group.value}, text=${group.text}`);
                            });
                            groupSelect.prop('disabled', false);

                            groupSelect.select2({
                                theme: 'bootstrap5',
                                placeholder: 'انتخاب گروه',
                                allowClear: true
                            });
                            console.log('✔️ لیست گروه‌ها بروزرسانی و select2 فعال شد.');
                        } else {
                            console.log('⚠️ گروهی برای دسته‌بندی انتخاب‌شده یافت نشد.');
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error('❌ خطا در درخواست Ajax دریافت گروه‌ها:', status, error, xhr.responseText);
                    alert('خطا در بارگذاری گروه‌ها. لطفاً دوباره تلاش کنید.');
                }
            });
        });


              $(document).on('change', '.item-select[name$="GroupId"]', function () {
            let $this = $(this);
            let index = $this.data('index');
            let groupId = $this.val();

            console.log(`🔄 GroupId changed: index=${index}, groupId=${groupId}`);

            let statusSelect = $(`select[name="Items[${index}].StatusId"]`);
            let productSelect = $(`select[name="Items[${index}].ProductId"]`);

            // ریست وضعیت و کالا
            if (statusSelect.length) {
                if (statusSelect.hasClass('select2-hidden-accessible')) {
                    statusSelect.select2('destroy');
                }
                statusSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا گروه را انتخاب کنید'
                }));
            }

            if (productSelect.length) {
                if (productSelect.hasClass('select2-hidden-accessible')) {
                    productSelect.select2('destroy');
                }
                productSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا وضعیت را انتخاب کنید'
                }));
            }

            if (!groupId) {
                console.log('⚠️ گروه انتخاب نشده، عملیات متوقف شد.');
                return;
            }

            // درخواست برای گرفتن وضعیت‌ها
            $.ajax({
                url: '/WarehouseManagement/ReceiptOrIssue/GetStatuses',
                type: 'GET',
                data: { groupId: groupId },
                success: function (statuses) {
                    console.log('✅ دریافت وضعیت‌ها:', statuses);

                    statusSelect.empty().append($('<option>', {
                        value: '',
                        text: 'انتخاب وضعیت'
                    }));

                    if (statuses && statuses.length) {
                        statuses.forEach(function (status) {
                            statusSelect.append($('<option>', {
                                value: status.value,
                                text: status.text
                            }));
                        });

                        statusSelect.prop('disabled', false).select2({
                            theme: 'bootstrap5',
                            placeholder: 'انتخاب وضعیت',
                            allowClear: true
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('❌ خطا در درخواست Ajax دریافت وضعیت‌ها:', status, error, xhr.responseText);
                    alert('خطا در بارگذاری وضعیت‌ها. لطفاً دوباره تلاش کنید.');
                }
            });
        });



                $(document).on('change', '.status-select', function () {
            let $this = $(this);
            let index = $this.data('index');
            let statusId = $this.val();

            console.log(`🔄 StatusId changed: index=${index}, statusId=${statusId}`);

            let productSelect = $(`select[name="Items[${index}].ProductId"]`);

            if (productSelect.length) {
                if (productSelect.hasClass('select2-hidden-accessible')) {
                    productSelect.select2('destroy');
                }
                productSelect.prop('disabled', true).empty().append($('<option>', {
                    value: '',
                    text: 'ابتدا وضعیت را انتخاب کنید'
                }));
            }

            if (!statusId) {
                console.log('⚠️ وضعیت انتخاب نشده، عملیات متوقف شد.');
                return;
            }

            $.ajax({
                url: '/WarehouseManagement/ReceiptOrIssue/GetProducts',
                type: 'GET',
                data: { statusId: statusId },
                success: function (products) {
                    console.log('✅ دریافت کالاها:', products);
                    productSelect.empty().append($('<option>', {
                        value: '',
                        text: 'انتخاب کالا'
                    }));
                    if (products && products.length) {
                        products.forEach(function (product) {
                            productSelect.append($('<option>', {
                                value: product.value,
                                text: product.text
                            }));
                        });
                        productSelect.prop('disabled', false).select2({
                            theme: 'bootstrap5',
                            placeholder: 'انتخاب کالا',
                            allowClear: true
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('❌ خطا در درخواست Ajax دریافت کالاها:', status, error, xhr.responseText);
                    alert('خطا در بارگذاری کالاها. لطفاً دوباره تلاش کنید.');
                }
            });
        });



                   $(document).on('click', '.remove-item', function () {
            const $row = $(this).closest('tr.align-middle');
            const index = $row.data('index');
            const $errorRow = $(`tr.validation-row[data-index="${index}"]`);

            // تخریب Select2 برای جلوگیری از نشت حافظه
            $row.find('.select2').each(function () {
                if ($(this).hasClass('select2-hidden-accessible')) {
                    $(this).select2('destroy');
                }
            });

            // حذف ردیف اصلی و ردیف خطا
            $row.remove();
            $errorRow.remove();
        });

                      $(document).on('click', '.save-item', function () {
            const $row = $(this).closest('tr[data-index]');
            const index = $row.data('index');
            const prefix = 'Items';

            // استخراج مقادیر
            const productId = $row.find(`select[name="${prefix}[${index}].ProductId"]`).val();
            const quantity = $row.find(`input[name="${prefix}[${index}].Quantity"]`).val();

            // مقادیر مبدا
            const sourceWarehouseId = $row.find(`select[name="${prefix}[${index}].SourceWarehouseId"]`).val();
            const sourceZoneId = $row.find(`select[name="${prefix}[${index}].SourceZoneId"]`).val();
            const sourceSectionId = $row.find(`select[name="${prefix}[${index}].SourceSectionId"]`).val();

            // مقادیر مقصد
            const destWarehouseId = $row.find(`select[name="${prefix}[${index}].DestinationWarehouseId"]`).val();
            const destZoneId = $row.find(`select[name="${prefix}[${index}].DestinationZoneId"]`).val();
            const destSectionId = $row.find(`select[name="${prefix}[${index}].DestinationSectionId"]`).val();

            // اعتبارسنجی فیلدها
            let errorMessages = [];

            // اعتبارسنجی کالا و تعداد
            if (!productId) errorMessages.push("کالا انتخاب نشده است.");
            if (!quantity || parseFloat(quantity) <= 0) errorMessages.push("مقدار باید بزرگ‌تر از صفر باشد.");

            // اعتبارسنجی مبدا
            if (!sourceWarehouseId) errorMessages.push("انبار مبدا انتخاب نشده است.");
            if (!sourceZoneId) errorMessages.push("قسمت مبدا انتخاب نشده است.");
            if (!sourceSectionId) errorMessages.push("بخش مبدا انتخاب نشده است.");

            // اعتبارسنجی مقصد
            if (!destWarehouseId) errorMessages.push("انبار مقصد انتخاب نشده است.");
            if (!destZoneId) errorMessages.push("قسمت مقصد انتخاب نشده است.");
            if (!destSectionId) errorMessages.push("بخش مقصد انتخاب نشده است.");

            const $errorRow = $(`tr.validation-row[data-index="${index}"]`);
            const $errorBox = $errorRow.find('.error-message-list');

            if (errorMessages.length > 0) {
                $errorBox.html(`<ul>${errorMessages.map(msg => `<li>${msg}</li>`).join('')}</ul>`);
                $errorRow.show();
                return;
            } else {
                $errorBox.empty();
                $errorRow.hide();
            }

            // دریافت متن‌های خلاصه برای کالا
            const categoryText = $row.find(`select[name="${prefix}[${index}].CategoryId"] option:selected`).text();
            const groupText = $row.find(`select[name="${prefix}[${index}].GroupId"] option:selected`).text();
            const statusText = $row.find(`select[name="${prefix}[${index}].StatusId"] option:selected`).text();
            const productText = $row.find(`select[name="${prefix}[${index}].ProductId"] option:selected`).text();
            const productSummary = `${categoryText} / ${groupText} / ${statusText} / ${productText}`;

            // دریافت متن‌های خلاصه برای مکان مبدا
            const sourceWarehouseText = $row.find(`select[name="${prefix}[${index}].SourceWarehouseId"] option:selected`).text();
            const sourceZoneText = $row.find(`select[name="${prefix}[${index}].SourceZoneId"] option:selected`).text();
            const sourceSectionText = $row.find(`select[name="${prefix}[${index}].SourceSectionId"] option:selected`).text();
            const sourceSummary = `${sourceWarehouseText} / ${sourceZoneText} / ${sourceSectionText}`;

            // دریافت متن‌های خلاصه برای مکان مقصد
            const destWarehouseText = $row.find(`select[name="${prefix}[${index}].DestinationWarehouseId"] option:selected`).text();
            const destZoneText = $row.find(`select[name="${prefix}[${index}].DestinationZoneId"] option:selected`).text();
            const destSectionText = $row.find(`select[name="${prefix}[${index}].DestinationSectionId"] option:selected`).text();
            const destSummary = `${destWarehouseText} / ${destZoneText} / ${destSectionText}`;

            // بستن آکاردئون کالا و درج خلاصه متن
            const $productCollapse = $row.find(`#productCollapse_${index}`);
            const $productHeader = $productCollapse.siblings('.accordion-header').find('.accordion-button');
            $productHeader.html(productSummary);
            bootstrap.Collapse.getOrCreateInstance($productCollapse[0]).hide();

            // بستن آکاردئون مکان مبدا و درج خلاصه متن
            const $sourceCollapse = $row.find(`#sourceCollapse_${index}`);
            const $sourceHeader = $sourceCollapse.siblings('.accordion-header').find('.accordion-button');
            $sourceHeader.html(sourceSummary);
            bootstrap.Collapse.getOrCreateInstance($sourceCollapse[0]).hide();

            // بستن آکاردئون مکان مقصد و درج خلاصه متن
            const $destCollapse = $row.find(`#destCollapse_${index}`);
            const $destHeader = $destCollapse.siblings('.accordion-header').find('.accordion-button');
            $destHeader.html(destSummary);
            bootstrap.Collapse.getOrCreateInstance($destCollapse[0]).hide();
        });





                     $('#receiptIssueForm').submit(function (e) {
            e.preventDefault();
            const form = this;
            const formData = new FormData(form);

            $.ajax({
                url: $(form).attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        if (confirm("سند با موفقیت ذخیره شد. آیا می‌خواهید فایل PDF سند را دریافت کنید؟")) {
                            // فرض: سرور response.documentId را برمی‌گرداند
                           window.location.href = `/WarehouseManagement/ReceiptOrIssue/Print/${response.documentId}`;

                        } else {
                            window.location.href = '/WarehouseManagement/ReceiptOrIssue/Index';
                        }

                    } else {
                        alert("خطا:\n" + (response.errors || []).join('\n'));
                    }
                },
                error: function () {
                    alert('خطا در ارسال اطلاعات به سرور.');
                }
            });
        });

    </script>
}
