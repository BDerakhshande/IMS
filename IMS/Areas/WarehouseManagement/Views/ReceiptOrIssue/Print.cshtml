@using IMS.Models.ProMan
@model ReceiptPrintViewModel

@{
    string GetPersianType(IMS.Domain.WarehouseManagement.Enums.ReceiptOrIssueType type) => type switch
    {
        IMS.Domain.WarehouseManagement.Enums.ReceiptOrIssueType.Receipt => "رسید",
        IMS.Domain.WarehouseManagement.Enums.ReceiptOrIssueType.Issue => "حواله",
        IMS.Domain.WarehouseManagement.Enums.ReceiptOrIssueType.Transfer => "انتقال"
    };
}

@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="utf-8" />
    <link href="~/css/PrintCreateIssueAndRecept.css" rel="stylesheet" />
</head>
<body>
    <div class="header-info">
        <div class="info-item">
            <span class="info-label">شماره سند:</span>
            <span class="info-value">@Model.Receipt.DocumentNumber</span>
        </div>
        <div class="info-item">
            <span class="info-label">تاریخ سند:</span>
            <span class="info-value">@Model.Receipt.Date.ToString("yyyy/MM/dd")</span>
        </div>
        <div class="info-item">
            <span class="info-label">نوع سند:</span>
            <span class="info-value">
                @(Model.Receipt.Type.HasValue ? GetPersianType(Model.Receipt.Type.Value) : "نوع مشخص نشده")
            </span>
        </div>
        <div class="info-item">
            <span class="info-label">نام پروژه:</span>
            <span class="info-value">@Model.ProjectName</span>
        </div>
    </div>

    <table>
        <thead>
            <tr>
                <th>کالا</th>
                <th>مبدأ</th>
                <th>مقصد</th>
                <th>تعداد</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Receipt.Items)
            {
                <tr>
                    <td>
                        @{
                            var parts = new[] {
                    item.Category?.Name ?? "—",
                    item.Group?.Name ?? "—",
                    item.Status?.Name ?? "—",
                    item.Product?.Name ?? "—"
                    };
                            var combined = string.Join(" / ", parts);
                        }
                        @combined
                    </td>
                    <td>
                        @{
                            var src = string.Join(" / ", new[] {
                    item.SourceWarehouse?.Name ?? "—",
                    item.SourceZone?.Name ?? "—",
                    item.SourceSection?.Name ?? "—"
                    });
                        }
                        @src
                    </td>
                    <td>
                        @{
                            var dest = string.Join(" / ", new[] {
                    item.DestinationWarehouse?.Name ?? "—",
                    item.DestinationZone?.Name ?? "—",
                    item.DestinationSection?.Name ?? "—"
                    });
                        }
                        @dest
                    </td>
                    <td>@item.Quantity</td>
                </tr>
            }
        </tbody>
    </table>
</body>
</html>
