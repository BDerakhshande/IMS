@using IMS.Domain.WarehouseManagement.Enums
@using IMS.Models.ProMan
@model ReceiptOrIssueViewModel
@{
    ViewData["Title"] = "ویرایش رسید / حواله / انتقال";
    Layout = "~/Areas/WarehouseManagement/Views/Shared/_MyLayout.cshtml";
}
@{
    var categories = ViewBag.Categories as IEnumerable<SelectListItem>;
}
@functions {
    string FormatLocationSummary(IEnumerable<SelectListItem> warehouses, IEnumerable<SelectListItem> zones, IEnumerable<SelectListItem> sections, int? warehouseId, int? zoneId, int? sectionId)
    {
        var warehouse = warehouses?.FirstOrDefault(x => x.Value == warehouseId?.ToString())?.Text ?? "?";
        var zone = zones?.FirstOrDefault(x => x.Value == zoneId?.ToString())?.Text ?? "?";
        var section = sections?.FirstOrDefault(x => x.Value == sectionId?.ToString())?.Text ?? "?";
        return $"{warehouse} / {zone} / {section}";
    }

    string FormatProductSummary(SelectList categories, IEnumerable<SelectListItem> groups, IEnumerable<SelectListItem> statuses, IEnumerable<SelectListItem> products, int? catId, int? groupId, int? statusId, int productId)
    {
        var cat = categories?.FirstOrDefault(x => x.Value == catId?.ToString())?.Text ?? "?";
        var group = groups?.FirstOrDefault(x => x.Value == groupId?.ToString())?.Text ?? "?";
        var status = statuses?.FirstOrDefault(x => x.Value == statusId?.ToString())?.Text ?? "?";
        var product = products?.FirstOrDefault(x => x.Value == productId.ToString())?.Text ?? "?";
        return $"{cat} / {group} / {status} / {product}";
    }
}

<link href="~/lib/bootstrap-5.1.3-dist/css/bootstrap.min.css" rel="stylesheet">
<link href="~/lib/select2/css/select2.min.css" rel="stylesheet">
<link href="~/lib/select2-bootstrap-5-theme-1.3.0/select2-bootstrap-5-theme.min.css" stylesheet">
<!-- اگر FontAwesome نیاز دارید -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">


<style>
    /* هماهنگی Select2 با Bootstrap */
    .select2-container {
        width: 100% !important;
        font-size: 0.85rem;
    }

    .select2-container--bootstrap-5 .select2-selection--single {
        height: 32px;
        padding: 0.25rem 0.5rem;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        display: flex;
        align-items: center;
    }

    .select2-container--bootstrap-5 .select2-selection__rendered {
        color: #212529;
        line-height: 1.5;
        font-size: 0.82rem;
        padding-right: 30px;
        padding-left: 10px;
    }

    .select2-container--bootstrap-5 .select2-selection__clear {
        right: 8px !important;
        top: 50%;
        transform: translateY(-50%);
    }

    .select2-container--bootstrap-5 .select2-selection__arrow {
        right: 4px;
        top: 50%;
        transform: translateY(-50%);
    }

    /* راست‌چین برای RTL */
    select.form-select[dir="rtl"],
    .select2-container[dir="rtl"] .select2-selection--single {
        direction: rtl;
        text-align: right;
        padding-right: 1rem;
        padding-left: 2rem;
    }

    /* حذف ظاهر پیش‌فرض مرورگر */
    select.form-select,
    select.select2-hidden-accessible {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-image: none !important;
    }

    /* جدول فشرده */
    .table-sm-custom {
        font-size: 0.85rem;
    }

        .table-sm-custom .form-select,
        .table-sm-custom .form-control,
        .table-sm-custom .select2-container .select2-selection--single {
            font-size: 0.85rem;
            padding: 0.25rem 0.5rem;
            height: auto;
        }

        .table-sm-custom .accordion-button {
            font-size: 0.82rem;
        }

        .table-sm-custom .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
        }

    .btn-icon {
        width: 32px;
        height: 32px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 16px;
    }

    .card {
        border-radius: 10px;
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        padding: 1.25rem 1.5rem;
    }

    .form-control, .form-select {
        border-radius: 6px;
        padding: 0.375rem 0.75rem;
    }

    .input-group-text {
        background-color: #f8f9fa;
    }

    .btn {
        border-radius: 6px;
        padding: 0.375rem 0.75rem;
        font-weight: 500;
    }

    .text-danger.small {
        font-size: 0.85rem;
    }

    .validation-summary-errors {
        color: #a94442;
        background-color: #f2dede;
        border: 1px solid #ebccd1;
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 5px;
        font-weight: bold;
    }

        .validation-summary-errors ul {
            margin: 0;
            padding-left: 20px;
            list-style-type: disc;
        }

    .accordion-button:not(.collapsed) {
        background-color: #f8f9fa;
        color: #495057;
    }

    .accordion-button:focus {
        box-shadow: none;
        border-color: rgba(0,0,0,.125);
    }
</style>

<div class="card border-0 shadow-sm" dir="rtl">
    <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
        <div class="d-flex align-items-center">
            <i class="fas fa-edit ms-1" style="font-size: 0.85rem;"></i>
            <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
        </div>
    </div>

    <div class="card-body p-2">
        <form asp-action="Edit" method="post" id="receiptIssueForm">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger small py-2 px-3 mb-3 text-end">
                    <strong class="d-block mb-1">خطا!</strong>
                    @Html.ValidationSummary(true)
                </div>
            }

            <div class="row g-2 mb-3">
                <div class="col-md-3">
                    <label asp-for="DateString" class="form-label fw-bold small text-end w-100">تاریخ</label>
                    <div class="input-group input-group-sm">
                        <input asp-for="DateString" class="form-control persian-datepicker text-end" placeholder="تاریخ را انتخاب کنید" />
                        <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
                    </div>
                    <span asp-validation-for="DateString" class="text-danger small d-block text-end"></span>
                </div>

                <div class="col-md-3">
                    <label asp-for="DocumentNumber" class="form-label fw-bold small text-end w-100">شماره سند</label>
                    <div class="input-group input-group-sm">
                        <input asp-for="DocumentNumber" class="form-control text-end" placeholder="شماره سند را وارد کنید" />
                        <span class="input-group-text"><i class="bi bi-file-earmark-text"></i></span>
                    </div>
                    <span asp-validation-for="DocumentNumber" class="text-danger small d-block text-end"></span>
                </div>

                <div class="col-md-3">
                    <label asp-for="Type" class="form-label fw-bold small text-end w-100">نوع</label>
                    <select asp-for="Type" class="form-select form-select-sm select2 text-end">
                        <option value="">انتخاب کنید...</option>
                        <option value="1">رسید</option>
                        <option value="2">حواله</option>
                        <option value="3">انتقال</option>
                    </select>
                    <span asp-validation-for="Type" class="text-danger small d-block text-end"></span>
                </div>
            </div>

            <div class="row g-2 mb-3">
                <div class="col-md-12">
                    <label asp-for="Description" class="form-label fw-bold small text-end w-100">توضیحات</label>
                    <textarea asp-for="Description" class="form-control form-control-sm" rows="2" placeholder="توضیحات را وارد کنید"></textarea>
                    <span asp-validation-for="Description" class="text-danger small d-block text-end"></span>
                </div>
            </div>

            <hr class="my-3" />
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h6 class="fw-bold text-dark mb-0" style="font-size: 0.9rem;">آیتم‌ها</h6>
                <button type="button" id="addItemBtn" class="btn btn-sm btn-primary hide-on-print">
                    <i class="bi bi-plus-circle ms-1"></i> افزودن آیتم
                </button>
            </div>

            <div class="table-responsive border rounded-3 mb-3">
                <table class="table table-hover table-sm mb-0 table-sm-custom" id="itemsTable">
                    <thead class="table-light" style="font-size: 0.8rem;">
                        <tr class="text-center">
                            <th class="py-2">کالا</th>
                            <th class="py-2">تعداد</th>
                            <th class="py-2">مبدا</th>
                            <th class="py-2">مقصد</th>
                            <th class="py-2">پروژه</th>
                            <th class="py-2">عنوان درخواست</th>
                            <th class="py-2" style="width: 80px;">عملیات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Items.Count; i++)
                        {
                            <tr class="align-middle" data-index="@i">
                                <td>
                                    <div class="accordion" id="productAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#productCollapse_@i">
                                                    @(Model.Items[i].ProductId != 0
                                                        ? FormatProductSummary(
                                                        ViewBag.Categories as SelectList,
                                                        Model.Items[i].AvailableGroups,
                                                        Model.Items[i].AvailableStatuses,
                                                        Model.Items[i].AvailableProducts,
                                                        Model.Items[i].CategoryId,
                                                        Model.Items[i].GroupId,
                                                        Model.Items[i].StatusId,
                                                        Model.Items[i].ProductId)
                                                        : "انتخاب کالا و مشخصات آن")
                                                </button>
                                            </h2>
                                            <div id="productCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#productAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <label class="form-label small text-muted mb-1 text-end w-100">دسته‌بندی</label>
                                                    <select asp-for="Items[i].CategoryId" class="form-select form-select-sm category-select select2 item-select text-end" data-index="@i">
                                                        <option value="">انتخاب دسته‌بندی</option>
                                                        @foreach (var item in ViewBag.Categories as SelectList)
                                                        {
                                                            <option value="@item.Value" selected="@(item.Value == Model.Items[i].CategoryId.ToString())">@item.Text</option>
                                                        }
                                                    </select>
                                                    <label class="form-label small text-muted mb-1 text-end w-100">گروه</label>
                                                    <select asp-for="Items[i].GroupId" class="form-select form-select-sm group-select select2 item-select mt-2 text-end" data-index="@i">
                                                        <option value="">انتخاب گروه</option>
                                                        @foreach (var group in Model.Items[i].AvailableGroups ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@group.Value" selected="@(group.Value == Model.Items[i].GroupId?.ToString())">@group.Text</option>
                                                        }
                                                    </select>
                                                    <label class="form-label small text-muted mb-1 text-end w-100">طبقه</label>
                                                    <select asp-for="Items[i].StatusId" class="form-select form-select-sm status-select select2 mt-2 text-end" data-index="@i">
                                                        <option value="">انتخاب طبقه</option>
                                                        @foreach (var status in Model.Items[i].AvailableStatuses ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@status.Value" selected="@(status.Value == Model.Items[i].StatusId?.ToString())">@status.Text</option>
                                                        }
                                                    </select>
                                                    <label class="form-label small text-muted mb-1 text-end w-100">کالا</label>
                                                    <select asp-for="Items[i].ProductId" class="form-select form-select-sm product-select select2 mt-2 text-end" data-index="@i">
                                                        <option value="">انتخاب کالا</option>
                                                        @foreach (var product in Model.Items[i].AvailableProducts ?? new List<SelectListItem>())
                                                        {
                                                            <option value="@product.Value" selected="@(product.Value == Model.Items[i].ProductId.ToString())">@product.Text</option>
                                                        }
                                                    </select>
                                                    <label class="form-label small text-muted mb-1 text-end w-100"> کد یکتا</label>
                                                    <div class="d-flex align-items-center mb-2">


                                                        <div class="flex-grow-1">
                                                            @if (Model.Items[i].AvailableUniqueCodes != null && Model.Items[i].AvailableUniqueCodes.Any())
                                                            {
                                                                <select asp-for="Items[i].SelectedUniqueCode"
                                                                        class="form-select form-select-sm select2 unique-codes-select text-end"
                                                                        data-index="@i"
                                                                        style="min-height: 36px;">
                                                                    <option value="">انتخاب کد یکتا</option>
                                                                    @foreach (var option in Model.Items[i].AvailableUniqueCodes)
                                                                    {
                                                                        <option value="@option.Value"
                                                                                selected="@(option.Value == Model.Items[i].SelectedUniqueCode)">
                                                                            @option.Text
                                                                        </option>
                                                                    }
                                                                </select>
                                                            }
                                                            else
                                                            {
                                                                <div class="border rounded px-2 bg-light text-end d-flex align-items-center"
                                                                     style="font-size: 0.85rem; min-height: 36px;">
                                                                    @if (!string.IsNullOrEmpty(Model.Items[i].SelectedUniqueCode))
                                                                    {
                                                                        <span class="text-dark fw-bold">
                                                                            @Model.Items[i].SelectedUniqueCode
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="text-muted">کد یکتا ثبت نشده است</span>
                                                                    }
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                </td>
                                <td style="width: 120px;">
                                    <input asp-for="Items[i].Quantity"
                                           value="@Model.Items[i].Quantity.ToString("0.##")"
                                           type="number" min="1" step="0.01"
                                           class="form-control form-control-sm text-end" />

                                    <span asp-validation-for="Items[i].Quantity" class="text-danger small d-block mt-1 text-end"></span>
                                </td>
                                <td>
                                    <div class="accordion" id="sourceAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#sourceCollapse_@i">
                                                    @(Model.Items[i].SourceSectionId != 0
                                                        ? FormatLocationSummary(
                                                        Model.Items[i].AvailableSourceWarehouses,
                                                        Model.Items[i].AvailableSourceZones,
                                                        Model.Items[i].AvailableSourceSections,
                                                        Model.Items[i].SourceWarehouseId,
                                                        Model.Items[i].SourceZoneId,
                                                        Model.Items[i].SourceSectionId)
                                                        : "مشخصات مبدا")
                                                </button>
                                            </h2>
                                            <div id="sourceCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#sourceAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                        <select asp-for="Items[i].SourceWarehouseId" class="form-select form-select-sm warehouse-select select2 text-end" data-index="@i" data-type="source">
                                                            <option value="">انتخاب انبار</option>
                                                            @foreach (var item in Model.Items[i].AvailableSourceWarehouses ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceWarehouseId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceWarehouseId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                        <select asp-for="Items[i].SourceZoneId" class="form-select form-select-sm zone-select select2 text-end" data-index="@i" data-type="source">
                                                            <option value="">انتخاب قسمت</option>
                                                            @foreach (var item in Model.Items[i].AvailableSourceZones ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceZoneId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceZoneId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                    <div>
                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                        <select asp-for="Items[i].SourceSectionId" class="form-select form-select-sm section-select select2 text-end" data-type="source">
                                                            <option value="">انتخاب بخش</option>
                                                            @foreach (var item in Model.Items[i].AvailableSourceSections ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].SourceSectionId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].SourceSectionId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="accordion" id="destAccordion_@i">
                                        <div class="accordion-item border-0">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#destCollapse_@i">
                                                    @(Model.Items[i].DestinationSectionId != 0
                                                        ? FormatLocationSummary(
                                                        Model.Items[i].AvailableDestinationWarehouses,
                                                        Model.Items[i].AvailableDestinationZones,
                                                        Model.Items[i].AvailableDestinationSections,
                                                        Model.Items[i].DestinationWarehouseId,
                                                        Model.Items[i].DestinationZoneId,
                                                        Model.Items[i].DestinationSectionId)
                                                        : "مشخصات مقصد")
                                                </button>
                                            </h2>
                                            <div id="destCollapse_@i" class="accordion-collapse collapse" data-bs-parent="#destAccordion_@i">
                                                <div class="accordion-body p-2">
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                        <select asp-for="Items[i].DestinationWarehouseId" class="form-select form-select-sm warehouse-select select2 text-end" data-index="@i" data-type="destination">
                                                            <option value="">انتخاب انبار</option>
                                                            @foreach (var item in Model.Items[i].AvailableDestinationWarehouses ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationWarehouseId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationWarehouseId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                    <div class="mb-2">
                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                        <select asp-for="Items[i].DestinationZoneId" class="form-select form-select-sm zone-select select2 text-end" data-index="@i" data-type="destination">
                                                            <option value="">انتخاب قسمت</option>
                                                            @foreach (var item in Model.Items[i].AvailableDestinationZones ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationZoneId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationZoneId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                    <div>
                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                        <select asp-for="Items[i].DestinationSectionId" class="form-select form-select-sm section-select select2 text-end" data-type="destination">
                                                            <option value="">انتخاب بخش</option>
                                                            @foreach (var item in Model.Items[i].AvailableDestinationSections ?? new List<SelectListItem>())
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Items[i].DestinationSectionId?.ToString())">@item.Text</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="Items[i].DestinationSectionId" class="text-danger small d-block mt-1 text-end"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <select asp-for="Items[i].ProjectId" class="form-select form-select-sm select2-project text-end" data-index="@i">
                                        <option value="">انتخاب پروژه...</option>
                                        @foreach (var project in Model.Items[i].AvailableProjects ?? new List<SelectListItem>())
                                        {
                                            <option value="@project.Value" selected="@(project.Value == Model.Items[i].ProjectId?.ToString())">@project.Text</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Items[i].ProjectId" class="text-danger small d-block text-end"></span>
                                </td>
                                <td>
                                    <select asp-for="Items[i].PurchaseRequestId" class="form-select form-select-sm select2-purchase-request text-end" data-index="@i">
                                        <option value="">انتخاب درخواست...</option>
                                        @foreach (var purchaseRequest in Model.Items[i].AvailablePurchaseRequests ?? new List<SelectListItem>())
                                        {
                                            <option value="@purchaseRequest.Value" selected="@(purchaseRequest.Value == Model.Items[i].PurchaseRequestId?.ToString())">@purchaseRequest.Text</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Items[i].PurchaseRequestId" class="text-danger small d-block text-end"></span>
                                </td>
                                <td class="text-center">
                                    <div class="d-flex justify-content-center gap-1">
                                        <button type="button" class="btn btn-sm btn-icon btn-outline-success rounded-circle hide-on-print save-item" title="ثبت">
                                            <i class="bi bi-check-lg"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-icon btn-outline-danger rounded-circle hide-on-print remove-item" title="حذف">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-start gap-2 mt-3">
                <a asp-action="Index" class="btn btn-sm btn-secondary px-3 hide-on-print">
                    <i class="bi bi-arrow-right-circle ms-1"></i> بازگشت
                </a>
                <button type="submit" class="btn btn-sm btn-success px-3 hide-on-print">
                    <i class="bi bi-check-circle ms-1"></i> ذخیره تغییرات
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <!-- jQuery باید قبل از select2.min.js باشد -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>


    <script src="/js/MenuJs.js"></script>
    <script type="text/html" id="CategoryTemplateOptions">
        @foreach (var category in ViewBag.Categories as IEnumerable<SelectListItem> ?? new List<SelectListItem>())
        {
                                <option value="@category.Value">@category.Text</option>
        }
    </script>

    <script type="text/html" id="ProjectTemplateOptions">
        @foreach (var project in Model.Items.FirstOrDefault()?.AvailableProjects ?? new List<SelectListItem>())
        {
                                <option value="@project.Value">@project.Text</option>
        }
    </script>

    <script type="text/html" id="PurchaseRequestTemplateOptions">
        @foreach (var purchaseRequest in Model.Items.FirstOrDefault()?.AvailablePurchaseRequests ?? new List<SelectListItem>())
        {
                                <option value="@purchaseRequest.Value">@purchaseRequest.Text</option>
        }
    </script>

    <script>
        const viewBagData = {
            categories: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categories)),
            groups: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Groups)),
            statuses: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Statuses)),
            products: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Products)),
            warehouses: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Warehouses)),
            zones: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Zones)),
            sections: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Sections)),
            projects: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Projects)),
            purchaseRequests: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PurchaseRequests)),
            uniqueCodes: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Items.FirstOrDefault()?.AvailableUniqueCodes ?? new List<SelectListItem>()))
                                                };

        $(document).ready(function () {
            // فعال‌سازی Select2 برای تمام دراپ‌داون‌ها
            function initSelect2($el, placeholder) {
                $el.each(function () {
                    const $select = $(this);
                    if ($select.hasClass('select2-hidden-accessible')) {
                        $select.select2('destroy');
                    }
                    $select.select2({
                        theme: 'bootstrap-5',
                        placeholder: placeholder || 'انتخاب کنید',
                        allowClear: true,
                        dir: 'rtl',
                        minimumResultsForSearch: 0,

                        width: '100%',
                        dropdownParent: $select.closest('.accordion-body').length ? $select.closest('.accordion-body') : $(document.body)
                    });
                });
            }

            // ساخت گزینه‌ها برای دراپ‌داون‌ها
            function buildOptions(list, defaultText) {
                let options = `<option value="">${defaultText}</option>`;
                list.forEach(item => {
                    const val = item.value ?? item.Value ?? '';
                    const txt = item.text ?? item.Text ?? '';
                    options += `<option value="${val}">${txt}</option>`;
                });
                return options;
            }

            // فعال‌سازی اولیه Select2
            initSelect2($('select.select2'), 'انتخاب کنید');
            initSelect2($('select.select2-project'), 'انتخاب پروژه');
            initSelect2($('select.select2-purchase-request'), 'انتخاب درخواست خرید');
            initSelect2($('select.category-select, select.warehouse-select'), 'جستجو و انتخاب');

            // مدیریت تغییر دسته‌بندی
            $(document).on('change', '.category-select', function () {
                const $this = $(this);
                const index = $this.data('index');
                const categoryId = $this.val();

                const $groupSelect = $(`select[name="Items[${index}].GroupId"]`);
                const $statusSelect = $(`select[name="Items[${index}].StatusId"]`);
                const $productSelect = $(`select[name="Items[${index}].ProductId"]`);

                // ریست گروه، طبقه و محصول
                destroySelect2($groupSelect);
                destroySelect2($statusSelect);
                destroySelect2($productSelect);
                $groupSelect.html('<option value="">ابتدا دسته‌بندی را انتخاب کنید</option>').prop('disabled', true);
                $statusSelect.html('<option value="">ابتدا گروه را انتخاب کنید</option>').prop('disabled', true);
                $productSelect.html('<option value="">ابتدا طبقه را انتخاب کنید</option>').prop('disabled', true);

                if (!categoryId) return;

                $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetGroups?categoryId=${categoryId}`, function (groups) {
                    $groupSelect.html(buildOptions(groups, 'انتخاب گروه')).prop('disabled', false);
                    initSelect2($groupSelect, 'انتخاب گروه');
                }).fail(function () {
                    alert('خطا در بارگذاری گروه‌ها. لطفاً دوباره تلاش کنید.');
                });
            });

            // مدیریت تغییر گروه
            $(document).on('change', '.group-select', function () {
                const $this = $(this);
                const index = $this.data('index');
                const groupId = $this.val();

                const $statusSelect = $(`select[name="Items[${index}].StatusId"]`);
                const $productSelect = $(`select[name="Items[${index}].ProductId"]`);

                destroySelect2($statusSelect);
                destroySelect2($productSelect);
                $statusSelect.html('<option value="">ابتدا گروه را انتخاب کنید</option>').prop('disabled', true);
                $productSelect.html('<option value="">ابتدا طبقه را انتخاب کنید</option>').prop('disabled', true);

                if (!groupId) return;

                $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetStatuses?groupId=${groupId}`, function (statuses) {
                    $statusSelect.html(buildOptions(statuses, 'انتخاب طبقه')).prop('disabled', false);
                    initSelect2($statusSelect, 'انتخاب طبقه');
                }).fail(function () {
                    alert('خطا در بارگذاری طبقه‌ها. لطفاً دوباره تلاش کنید.');
                });
            });

            // مدیریت تغییر طبقه
            $(document).on('change', '.status-select', function () {
                const $this = $(this);
                const index = $this.data('index');
                const statusId = $this.val();

                const $productSelect = $(`select[name="Items[${index}].ProductId"]`);

                destroySelect2($productSelect);
                $productSelect.html('<option value="">ابتدا طبقه را انتخاب کنید</option>').prop('disabled', true);

                if (!statusId) return;

                $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetProducts?statusId=${statusId}`, function (products) {
                    $productSelect.html(buildOptions(products, 'انتخاب کالا')).prop('disabled', false);
                    initSelect2($productSelect, 'انتخاب کالا');
                }).fail(function () {
                    alert('خطا در بارگذاری کالاها. لطفاً دوباره تلاش کنید.');
                });
            });

            $(document).on("change", ".product-select", function () {
                const rowIndex = $(this).data("index");
                const productId = $(this).val();
                const $uniqueSelect = $(`select[name="Items[${rowIndex}].SelectedUniqueCode"]`);
                const $quantityInput = $(`input[name="Items[${rowIndex}].Quantity"]`);

                // ذخیره مقدار قبلی Quantity قبل از reset
                const previousQuantity = $quantityInput.val();

                // پاکسازی و تخریب Select2 قبلی (اگر وجود دارد)
                if ($uniqueSelect.hasClass('select2-hidden-accessible')) {
                    $uniqueSelect.select2('destroy');
                }
                $uniqueSelect.empty().append('<option value="">انتخاب کد یکتا</option>');

                // بازگرداندن حالت اولیه quantity
                $quantityInput.prop('disabled', false).removeClass('disabled-quantity');

                const $uniqueContainer = $uniqueSelect.closest('.d-flex.align-items-center.mb-2');
                const $placeholder = $uniqueContainer.find('.border.rounded.px-2.bg-light');

                // اگر محصول انتخاب نشده باشد
                if (!productId) {
                    $uniqueSelect.addClass('d-none').hide();
                    if ($placeholder.length) {
                        $placeholder.show().find('span').text('کد یکتا ثبت نشده است');
                    }
                    // مقدار قبلی Quantity حفظ شود
                    $quantityInput.val(previousQuantity || '');
                    return;
                }

                // 📦 درخواست AJAX برای دریافت کدهای یکتا
                $.get(`/WarehouseManagement/ReceiptOrIssue/GetUniqueCodes?productId=${productId}`, function (data) {
                    console.log("✅ Received unique codes:", data);

                    if (data && data.length > 0) {
                        data.forEach(item => {
                            const display = item.displayHierarchyByCode;
                            const text = item.text;
                            const fallback = item.hierarchy || item.id;
                            const safeText = (display && String(display).trim() && String(display).toLowerCase() !== 'undefined')
                                ? display
                                : (text && String(text).trim() && String(text).toLowerCase() !== 'undefined')
                                    ? text
                                    : fallback;

                            const opt = new Option(safeText, item.id, false, false);
                            $uniqueSelect.append(opt);
                        });

                        $uniqueSelect.removeClass('d-none').show();
                        if ($placeholder.length) $placeholder.hide();
                        initSelect2($uniqueSelect, 'کد یکتا را انتخاب کنید');

                    } else {
                        // اگر هیچ کد یکتایی موجود نیست
                        $uniqueSelect.addClass('d-none').hide();
                        if ($placeholder.length) {
                            $placeholder.show().find('span').text('کد یکتا موجود نیست');
                        } else {
                            const placeholderHtml = `
                            <div class="border rounded px-2 bg-light text-end d-flex align-items-center"
                                 style="font-size: 0.85rem; min-height: 36px;">
                                 <span class="text-muted">کد یکتا موجود نیست</span>
                            </div>`;
                            $uniqueContainer.find('.flex-grow-1').html(placeholderHtml);
                        }
                    }
                }).fail(() => {
                    console.error("❌ خطا در دریافت کدهای یکتا");
                    $uniqueSelect.addClass('d-none').hide();
                    if ($placeholder.length) {
                        $placeholder.show().find('span').text('خطا در بارگذاری کدهای یکتا');
                    }
                });
            });

            function sanitizeText(t, idFallback) {
                if (t === undefined || t === null) return `کد ${idFallback}`;
                if (typeof t !== 'string') t = String(t);
                t = t.trim();
                if (!t || t.toLowerCase() === 'undefined' || t.toLowerCase() === 'null')
                    return `کد ${idFallback}`;
                return t;
            }

            async function setDependentSelect($select, value) {
                if ($select.length) {
                    $select.val(value ?? "").trigger('change');
                    $select.siblings(`input[type="hidden"][name="${$select.attr('name')}"]`).remove();
                    if (value !== undefined && value !== null) {
                        $select.after(`<input type="hidden" name="${$select.attr('name')}" value="${value}" />`);
                        $select.prop("disabled", true).addClass("disabled-field");
                    } else {
                        $select.prop("disabled", false).removeClass("disabled-field");
                    }
                    return new Promise(resolve => setTimeout(resolve, 100));
                }
            }

            $(document).on("change", ".unique-codes-select", async function () {
                const $this = $(this);
                const rowIndex = $this.data("index");

                if ($this.data('processing')) {
                    console.log("🔁 change already processing — skipping");
                    return;
                }
                $this.data('processing', true);

                console.groupCollapsed(`🟦 [Change Triggered] Row ${rowIndex}`);
                try {
                    const selArr = $this.select2 ? $this.select2('data') : [];
                    const selectedData = (selArr && selArr.length) ? selArr[0] : {};
                    const optionSelectedText = $this.find('option:selected').text();

                    const uniqueCodeId = selectedData?.id ?? $this.val();
                    let uniqueCodeText = sanitizeText(selectedData?.text ?? optionSelectedText, uniqueCodeId);

                    let data = {};
                    if (uniqueCodeId) {
                        try {
                            data = await $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetUniqueCodeDetails?uniqueCodeId=${uniqueCodeId}`);
                            if (data && data.text) uniqueCodeText = data.text;
                        } catch (err) {
                            console.warn("⚠️ خطا در بارگذاری جزئیات کد یکتا:", err);
                        }
                    } else {
                        console.log("ℹ️ هیچ کد یکتایی انتخاب نشده — ادامه بدون اطلاعات خودکار");
                    }

                    uniqueCodeText = sanitizeText(uniqueCodeText, uniqueCodeId);

                    // Update option
                    if (uniqueCodeId) {
                        const existingOption = $this.find(`option[value='${uniqueCodeId}']`);
                        if (existingOption.length) {
                            existingOption.text(uniqueCodeText);
                        } else {
                            const newOption = new Option(uniqueCodeText, uniqueCodeId, true, true);
                            $this.append(newOption);
                        }
                        $this.val(uniqueCodeId).trigger('change.select2');
                        $this.trigger({ type: 'select2:select', params: { data: { id: uniqueCodeId, text: uniqueCodeText } } });
                    }

                    // 🎯 مدیریت Quantity
                    const $quantityInput = $(`input[name="Items[${rowIndex}].Quantity"]`);
                    const previousQuantity = $quantityInput.data("previous") || $quantityInput.val();

                    if (uniqueCodeId) {
                        // اگر کد یکتا انتخاب شده، مقدار را ۱ کن و قفل کن
                        $quantityInput
                            .data("previous", previousQuantity) // ذخیره مقدار قبلی
                            .val(1)
                            .prop('disabled', true)
                            .addClass('disabled-quantity');
                    } else {
                        // اگر کد یکتا برداشته شد، مقدار قبلی را بازگردان
                        const restoredQuantity = (previousQuantity && parseFloat(previousQuantity) > 0)
                            ? previousQuantity
                            : '';

                        $quantityInput
                            .val(restoredQuantity)
                            .prop('disabled', false)
                            .removeClass('disabled-quantity');
                    }

                    // Helper برای فیلدهای وابسته
                    await setDependentSelect($(`select[name="Items[${rowIndex}].SourceWarehouseId"]`), data?.sourceWarehouseId);
                    await setDependentSelect($(`select[name="Items[${rowIndex}].SourceZoneId"]`), data?.sourceZoneId);
                    await setDependentSelect($(`select[name="Items[${rowIndex}].SourceSectionId"]`), data?.sourceSectionId);
                    await setDependentSelect($(`select[name="Items[${rowIndex}].ProjectId"]`), data?.projectId);

                    // استایل فیلدهای غیرفعال
                    $(".disabled-field").css({
                        "background-color": "#f3f3f3",
                        "color": "#777",
                        "pointer-events": "none"
                    });

                    // نمایش سلسله‌مراتب
                    let $hierarchyDisplay = $(`#hierarchy-display-${rowIndex}`);
                    if ($hierarchyDisplay.length === 0) {
                        $this.closest('.row').after(`
                        <div id="hierarchy-display-${rowIndex}"
                             class="text-end text-info small mt-1 fw-bold"
                             style="font-size:0.85rem;">
                            ${data?.hierarchy || uniqueCodeText}
                        </div>
                    `);
                    } else {
                        $hierarchyDisplay.text(data?.hierarchy || uniqueCodeText).toggle(!!uniqueCodeId);
                    }

                    console.log("✅ Change event completed successfully (optional unique code)");
                } catch (err) {
                    console.error("🚨 Error in unique code processing:", err);
                    alert("خطا در بارگذاری جزئیات کد یکتا. لطفاً دوباره تلاش کنید.");
                } finally {
                    $this.data('processing', false);
                    console.groupEnd();
                }
            });


            // مدیریت تغییر انبار
            $(document).on('change', '.warehouse-select', function () {
                const $this = $(this);
                const index = $this.data('index');
                const type = $this.data('type');
                const warehouseId = $this.val();

                const $zoneSelect = $(`select[name="Items[${index}].${capitalize(type)}ZoneId"]`);
                const $sectionSelect = $(`select[name="Items[${index}].${capitalize(type)}SectionId"]`);

                destroySelect2($zoneSelect);
                destroySelect2($sectionSelect);
                $zoneSelect.html('<option value="">ابتدا انبار را انتخاب کنید</option>').prop('disabled', true);
                $sectionSelect.html('<option value="">ابتدا قسمت را انتخاب کنید</option>').prop('disabled', true);

                if (!warehouseId) return;

                $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetZones?warehouseId=${warehouseId}`, function (zones) {
                    $zoneSelect.html(buildOptions(zones, 'انتخاب قسمت')).prop('disabled', false);
                    initSelect2($zoneSelect, 'انتخاب قسمت');
                }).fail(function () {
                    alert('خطا در بارگذاری قسمت‌ها. لطفاً دوباره تلاش کنید.');
                });
            });

            // مدیریت تغییر قسمت
            $(document).on('change', '.zone-select', function () {
                const $this = $(this);
                const nameAttr = $this.attr('name');
                const match = nameAttr.match(/Items\[(\d+)\]\.(Source|Destination)ZoneId/);
                if (!match) return;

                const index = match[1];
                const type = match[2].toLowerCase();
                const zoneId = $this.val();

                const $sectionSelect = $(`select[name="Items[${index}].${capitalize(type)}SectionId"]`);

                destroySelect2($sectionSelect);
                $sectionSelect.html('<option value="">ابتدا قسمت را انتخاب کنید</option>').prop('disabled', true);

                if (!zoneId) return;

                $.getJSON(`/WarehouseManagement/ReceiptOrIssue/GetSections?zoneId=${zoneId}`, function (sections) {
                    $sectionSelect.html(buildOptions(sections, 'انتخاب بخش')).prop('disabled', false);
                    initSelect2($sectionSelect, 'انتخاب بخش');
                }).fail(function () {
                    alert('خطا در بارگذاری بخش‌ها. لطفاً دوباره تلاش کنید.');
                });
            });


            // تابع کمکی برای بزرگ کردن حرف اول
            function capitalize(str) {
                return str.charAt(0).toUpperCase() + str.slice(1);
            }

            // تابع تخریب Select2
            function destroySelect2($el) {
                if ($el.hasClass('select2-hidden-accessible')) {
                    $el.select2('destroy');
                }
            }

            // افزودن آیتم جدید
            $('#addItemBtn').on('click', function () {
                const tableBody = $('#itemsTable tbody');
                const rowCount = tableBody.find('tr.align-middle').length;

                const template = `
                                                            <tr class="align-middle" data-index="${rowCount}">
                                                                <td>
                                                                    <div class="accordion" id="productAccordion_${rowCount}">
                                                                        <div class="accordion-item border-0">
                                                                            <h2 class="accordion-header">
                                                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#productCollapse_${rowCount}">
                                                                                    انتخاب کالا و مشخصات آن
                                                                                </button>
                                                                            </h2>
                                                                            <div id="productCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#productAccordion_${rowCount}">
                                                                                <div class="accordion-body p-2">
                                                                                    <label class="form-label small text-muted mb-1 text-end w-100">دسته‌بندی</label>
                                                                                    <select name="Items[${rowCount}].CategoryId" class="form-select form-select-sm category-select select2 item-select text-end" data-index="${rowCount}">
                                                                                        <option value="">انتخاب دسته‌بندی</option>
                                                                                        ${$('#CategoryTemplateOptions').html() || '<option value="">دسته‌بندی در دسترس نیست</option>'}
                                                                                    </select>
                                                                                    <label class="form-label small text-muted mb-1 text-end w-100">گروه</label>
                                                                                    <select name="Items[${rowCount}].GroupId" class="form-select form-select-sm group-select select2 item-select mt-2 text-end" data-index="${rowCount}" disabled>
                                                                                        <option value="">انتخاب گروه</option>
                                                                                    </select>
                                                                                    <label class="form-label small text-muted mb-1 text-end w-100">طبقه</label>
                                                                                    <select name="Items[${rowCount}].StatusId" class="form-select form-select-sm status-select select2 mt-2 text-end" data-index="${rowCount}" disabled>
                                                                                        <option value="">انتخاب طبقه</option>
                                                                                    </select>
                                                                                    <label class="form-label small text-muted mb-1 text-end w-100">کالا</label>
                                                                                    <select name="Items[${rowCount}].ProductId" class="form-select form-select-sm product-select select2 mt-2 text-end" data-index="${rowCount}" disabled>
                                                                                        <option value="">انتخاب کالا</option>
                                                                                    </select>
                                                                                    <label class="form-label small text-muted mb-1 text-end w-100">کد یکتا</label>
                                                                                    <div class="d-flex align-items-center mb-2">
                                                                                        <div class="flex-grow-1">
                                                                                            <select name="Items[${rowCount}].SelectedUniqueCode"
                                                                                                    class="form-select form-select-sm select2 unique-codes-select text-end d-none"
                                                                                                    data-index="${rowCount}"
                                                                                                    style="min-height: 36px;">
                                                                                                <option value="">انتخاب کد یکتا</option>
                                                                                            </select>
                                                                                           
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td style="width: 120px;">
                                                                    <input name="Items[${rowCount}].Quantity" type="number" min="1" class="form-control form-control-sm text-end" />
                                                                    <span class="text-danger small d-block mt-1 text-end"></span>
                                                                </td>
                                                                <td>
                                                                    <div class="accordion" id="sourceAccordion_${rowCount}">
                                                                        <div class="accordion-item border-0">
                                                                            <h2 class="accordion-header">
                                                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#sourceCollapse_${rowCount}">
                                                                                    مشخصات مبدا
                                                                                </button>
                                                                            </h2>
                                                                            <div id="sourceCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#sourceAccordion_${rowCount}">
                                                                                <div class="accordion-body p-2">
                                                                                    <div class="mb-2">
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                                                        <select name="Items[${rowCount}].SourceWarehouseId" class="form-select form-select-sm warehouse-select select2 text-end" data-index="${rowCount}" data-type="source">
                                                                                            <option value="">انتخاب انبار</option>
                                                                                            ${buildOptions(viewBagData.warehouses, 'انتخاب انبار')}
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                    <div class="mb-2">
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                                                        <select name="Items[${rowCount}].SourceZoneId" class="form-select form-select-sm zone-select select2 text-end" data-index="${rowCount}" data-type="source" disabled>
                                                                                            <option value="">انتخاب قسمت</option>
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                    <div>
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                                                        <select name="Items[${rowCount}].SourceSectionId" class="form-select form-select-sm section-select select2 text-end" data-type="source" disabled>
                                                                                            <option value="">انتخاب بخش</option>
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="accordion" id="destAccordion_${rowCount}">
                                                                        <div class="accordion-item border-0">
                                                                            <h2 class="accordion-header">
                                                                                <button class="accordion-button collapsed bg-light py-2" type="button" data-bs-toggle="collapse" data-bs-target="#destCollapse_${rowCount}">
                                                                                    مشخصات مقصد
                                                                                </button>
                                                                            </h2>
                                                                            <div id="destCollapse_${rowCount}" class="accordion-collapse collapse" data-bs-parent="#destAccordion_${rowCount}">
                                                                                <div class="accordion-body p-2">
                                                                                    <div class="mb-2">
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">انبار</label>
                                                                                        <select name="Items[${rowCount}].DestinationWarehouseId" class="form-select form-select-sm warehouse-select select2 text-end" data-index="${rowCount}" data-type="destination">
                                                                                            <option value="">انتخاب انبار</option>
                                                                                            ${buildOptions(viewBagData.warehouses, 'انتخاب انبار')}
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                    <div class="mb-2">
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">قسمت</label>
                                                                                        <select name="Items[${rowCount}].DestinationZoneId" class="form-select form-select-sm zone-select select2 text-end" data-index="${rowCount}" data-type="destination" disabled>
                                                                                            <option value="">انتخاب قسمت</option>
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                    <div>
                                                                                        <label class="form-label small text-muted mb-1 text-end w-100">بخش</label>
                                                                                        <select name="Items[${rowCount}].DestinationSectionId" class="form-select form-select-sm section-select select2 text-end" data-type="destination" disabled>
                                                                                            <option value="">انتخاب بخش</option>
                                                                                        </select>
                                                                                        <span class="text-danger small d-block mt-1 text-end"></span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <select name="Items[${rowCount}].ProjectId" class="form-select form-select-sm select2-project text-end" data-index="${rowCount}">
                                                                        <option value="">انتخاب پروژه...</option>
                                                                        ${$('#ProjectTemplateOptions').html() || '<option value="">پروژه در دسترس نیست</option>'}
                                                                    </select>
                                                                    <span class="text-danger small d-block text-end"></span>
                                                                </td>
                                                                <td>
                                                                    <select name="Items[${rowCount}].PurchaseRequestId" class="form-select form-select-sm select2-purchase-request text-end" data-index="${rowCount}">
                                                                        <option value="">انتخاب درخواست...</option>
                                                                        ${$('#PurchaseRequestTemplateOptions').html() || '<option value="">درخواست در دسترس نیست</option>'}
                                                                    </select>
                                                                    <span class="text-danger small d-block text-end"></span>
                                                                </td>
                                                                <td class="text-center">
                                                                    <div class="d-flex justify-content-center gap-1">
                                                                        <button type="button" class="btn btn-sm btn-icon btn-outline-success rounded-circle hide-on-print save-item" title="ثبت">
                                                                            <i class="bi bi-check-lg"></i>
                                                                        </button>
                                                                        <button type="button" class="btn btn-sm btn-icon btn-outline-danger rounded-circle hide-on-print remove-item" title="حذف">
                                                                            <i class="bi bi-trash"></i>
                                                                        </button>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        `;

                tableBody.append(template);

                // فعال‌سازی Select2 برای دراپ‌داون‌های جدید
                initSelect2($(`tr[data-index="${rowCount}"] .select2`), 'انتخاب کنید');
                initSelect2($(`tr[data-index="${rowCount}"] .select2-project`), 'انتخاب پروژه');
                initSelect2($(`tr[data-index="${rowCount}"] .select2-purchase-request`), 'انتخاب درخواست خرید');
                initSelect2($(`tr[data-index="${rowCount}"] .category-select, tr[data-index="${rowCount}"] .warehouse-select`), 'جستجو و انتخاب');

                // فعال‌سازی آکاردئون برای ردیف جدید
                const collapseElements = [
                    document.querySelector(`#productCollapse_${rowCount}`),
                    document.querySelector(`#sourceCollapse_${rowCount}`),
                    document.querySelector(`#destCollapse_${rowCount}`)
                ];
                collapseElements.forEach(el => {
                    if (el) {
                        new bootstrap.Collapse(el, { toggle: false });
                    }
                });
            });

            // حذف آیتم
            $(document).on('click', '.remove-item', function () {
                const $row = $(this).closest('tr');
                $row.find('.select2').each(function () {
                    destroySelect2($(this));
                });
                $row.remove();
            });

            // === finalizeRow: نمایش خلاصه آکاردئون و بستن آن ===
            function finalizeRow($row, index, prefix) {
                const categoryText = $row.find(`select[name="${prefix}[${index}].CategoryId"] option:selected`).text() || 'انتخاب نشده';
                const groupText = $row.find(`select[name="${prefix}[${index}].GroupId"] option:selected`).text() || 'انتخاب نشده';
                const statusText = $row.find(`select[name="${prefix}[${index}].StatusId"] option:selected`).text() || 'انتخاب نشده';
                const productText = $row.find(`select[name="${prefix}[${index}].ProductId"] option:selected`).text() || 'انتخاب نشده';

                // دریافت unique code text
                const uniqueCodeText = $row.find(`select[name="${prefix}[${index}].SelectedUniqueCode"] option:selected`).text() || '';

                const productSummary = `${categoryText} / ${groupText} / ${statusText} / ${productText}${uniqueCodeText ? ` (${uniqueCodeText})` : ''}`;

                // === خلاصه مبدا ===
                const sourceWarehouseText = $row.find(`select[name="${prefix}[${index}].SourceWarehouseId"] option:selected`).text() || 'انتخاب نشده';
                const sourceZoneText = $row.find(`select[name="${prefix}[${index}].SourceZoneId"] option:selected`).text() || 'انتخاب نشده';
                const sourceSectionText = $row.find(`select[name="${prefix}[${index}].SourceSectionId"] option:selected`).text() || 'انتخاب نشده';
                const sourceSummary = `${sourceWarehouseText} / ${sourceZoneText} / ${sourceSectionText}`;

                // === خلاصه مقصد ===
                const destWarehouseText = $row.find(`select[name="${prefix}[${index}].DestinationWarehouseId"] option:selected`).text() || 'انتخاب نشده';
                const destZoneText = $row.find(`select[name="${prefix}[${index}].DestinationZoneId"] option:selected`).text() || 'انتخاب نشده';
                const destSectionText = $row.find(`select[name="${prefix}[${index}].DestinationSectionId"] option:selected`).text() || 'انتخاب نشده';
                const destSummary = `${destWarehouseText} / ${destZoneText} / ${destSectionText}`;

                // === نمایش خلاصه و بستن آکاردئون ===
                const updateAccordion = ($collapse, summary) => {
                    const $header = $collapse.siblings('.accordion-header').find('.accordion-button');
                    $header.html(summary).css({
                        'text-align': 'right',
                        'justify-content': 'flex-start',
                        'direction': 'rtl'
                    });
                    bootstrap.Collapse.getOrCreateInstance($collapse[0]).hide();
                };

                updateAccordion($row.find(`#productCollapse_${index}`), productSummary);
                updateAccordion($row.find(`#sourceCollapse_${index}`), sourceSummary);
                updateAccordion($row.find(`#destCollapse_${index}`), destSummary);
            }

            // اعتبارسنجی و ذخیره آیتم
            $(document).on('click', '.save-item', function () {
                const $row = $(this).closest('tr[data-index]');
                const index = $row.data('index');
                const prefix = 'Items';

                // استخراج مقادیر
                const productId = $row.find(`select[name="${prefix}[${index}].ProductId"]`).val();
                const quantity = $row.find(`input[name="${prefix}[${index}].Quantity"]`).val();
                const sourceWarehouseId = $row.find(`select[name="${prefix}[${index}].SourceWarehouseId"]`).val();
                const sourceZoneId = $row.find(`select[name="${prefix}[${index}].SourceZoneId"]`).val();
                const sourceSectionId = $row.find(`select[name="${prefix}[${index}].SourceSectionId"]`).val();
                const destWarehouseId = $row.find(`select[name="${prefix}[${index}].DestinationWarehouseId"]`).val();
                const destZoneId = $row.find(`select[name="${prefix}[${index}].DestinationZoneId"]`).val();
                const destSectionId = $row.find(`select[name="${prefix}[${index}].DestinationSectionId"]`).val();
                const projectId = $row.find(`select[name="${prefix}[${index}].ProjectId"]`).val();

                // اعتبارسنجی
                let errorMessages = [];
                if (!productId) errorMessages.push("کالا انتخاب نشده است.");
                if (!quantity || parseFloat(quantity) <= 0) errorMessages.push("مقدار باید بزرگ‌تر از صفر باشد.");
                if (!sourceWarehouseId) errorMessages.push("انبار مبدا انتخاب نشده است.");
                if (!sourceZoneId) errorMessages.push("قسمت مبدا انتخاب نشده است.");
                if (!sourceSectionId) errorMessages.push("بخش مبدا انتخاب نشده است.");
                if (!destWarehouseId) errorMessages.push("انبار مقصد انتخاب نشده است.");
                if (!destZoneId) errorMessages.push("قسمت مقصد انتخاب نشده است.");
                if (!destSectionId) errorMessages.push("بخش مقصد انتخاب نشده است.");

                // نمایش خطاها
                const $errorBox = $row.next('.validation-row[data-index="' + index + '"] .error-message-list');
                if (errorMessages.length > 0) {
                    if ($errorBox.length === 0) {
                        $row.after(`
                                                                    <tr class="validation-row bg-danger bg-opacity-10" data-index="${index}">
                                                                        <td colspan="7" class="p-2">
                                                                            <div class="alert alert-danger p-2 mb-0 small error-message-list">
                                                                                <ul class="mb-0">${errorMessages.map(msg => `<li>${msg}</li>`).join('')}</ul>
                                                                            </div>
                                                                        </td>
                                                                    </tr>
                                                                `);
                    } else {
                        $errorBox.html(`<ul class="mb-0">${errorMessages.map(msg => `<li>${msg}</li>`).join('')}</ul>`);
                    }
                    return;
                } else {
                    $row.next(`tr.validation-row[data-index="${index}"]`).remove();
                }

                finalizeRow($row, index, prefix);

                $row.removeClass('table-warning').addClass('table-success');
                $(this).removeClass('btn-outline-success').addClass('btn-success').attr('title', 'ویرایش');
            });

            // ارسال فرم
            $('#receiptIssueForm').on('submit', function (e) {
                e.preventDefault();
                const form = this;
                const formData = new FormData(form);

                $.ajax({
                    url: $(form).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            if (confirm("سند با موفقیت ویرایش شد. آیا می‌خواهید فایل PDF سند را دریافت کنید؟")) {
                                window.location.href = `/WarehouseManagement/ReceiptOrIssue/Print/${response.documentId}`;
                            } else {
                                window.location.href = '/WarehouseManagement/ReceiptOrIssue/Index';
                            }
                        } else {
                            alert("خطا:\n" + (response.errors || []).join('\n'));
                        }
                    },
                    error: function () {
                        alert('خطا در ارسال اطلاعات به سرور.');
                    }
                });
            });
        });
    </script>
}