@{
    ViewData["Title"] = "گزارش تراکنش‌های انبار";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var warehouses = ViewBag.Warehouses as SelectList;
    var categories = ViewBag.Categories as SelectList;
    var groups = ViewBag.Groups as SelectList;
    var statuses = ViewBag.Statuses as SelectList;
    var products = ViewBag.Products as SelectList;
    var documentTypes = new List<string> { "رسید", "حواله", "انتقال" };
}

<div class="inventory-report-container">
    <h1>@ViewData["Title"]</h1>

    <div class="filter-section">
        <div class="filter-box">
            <label for="warehouse">انبار</label>
            <select id="warehouse" class="form-select">
                <option value="">انتخاب انبار</option>
                @foreach (var item in warehouses)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>

            <label for="zone">منطقه</label>
            <select id="zone" class="form-select">
                <option value="">انتخاب منطقه</option>
            </select>

            <label for="section">بخش</label>
            <select id="section" class="form-select">
                <option value="">انتخاب بخش</option>
            </select>

        </div>

        <div class="filter-box">
            <label for="category">دسته‌بندی</label>
            <select id="category" class="form-select">
                <option value="">انتخاب دسته‌بندی</option>
                @foreach (var item in categories)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>

            <label for="group">گروه</label>
            <select id="group" class="form-select">
                <option value="">انتخاب گروه</option>
                @foreach (var item in groups)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>

            <label for="status">وضعیت</label>
            <select id="status" class="form-select">
                <option value="">انتخاب وضعیت</option>
                @foreach (var item in statuses)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>

            <label for="product">کالا</label>
            <select id="product" class="form-select">
                <option value="">انتخاب کالا</option>
                @foreach (var item in products)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </div>

        <div class="filter-box">
            <label for="fromDate">از تاریخ</label>
            <input type="date" id="fromDate" class="form-control" />

            <label for="toDate">تا تاریخ</label>
            <input type="date" id="toDate" class="form-control" />

            <label for="docType">نوع سند</label>
            <select id="docType" class="form-select">
                <option value="">انتخاب نوع</option>
                @foreach (var item in documentTypes)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
    </div>

    <button class="search-btn" id="searchBtn">جستجو</button>

    <table id="reportTable" style="display:none;">
        <thead>
            <tr>
                <th>تاریخ</th>
                <th>کالا</th>
                <th>مبدأ</th>
                <th>مقصد</th>
                <th>نوع سند</th>
                <th>شماره سند</th>
                <th>تعداد</th>
            </tr>
        </thead>
        <tbody id="reportBody"></tbody>
    </table>
</div>

<style>
    .inventory-report-container {
        font-family: 'IRANSans', Tahoma;
        background: #fff;
        padding: 20px;
        direction: rtl;
        max-width: 1200px;
        margin: auto;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

        .inventory-report-container h1 {
            text-align: center;
            font-size: 24px;
            color: #2c3e50;
            margin-bottom: 20px;
        }

    .filter-section {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 20px;
    }

    .filter-box {
        flex: 1;
        min-width: 250px;
        background: #f9f9f9;
        padding: 15px;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
    }

        .filter-box label {
            font-size: 14px;
            font-weight: bold;
            margin-top: 10px;
            display: block;
        }

    .form-select, .form-control {
        width: 100%;
        padding: 8px 10px;
        margin-top: 4px;
        border-radius: 5px;
        border: 1px solid #ced4da;
        background: #fff;
        font-size: 14px;
    }

    .search-btn {
        display: block;
        margin: 20px auto;
        padding: 10px 30px;
        background-color: #4a6baf;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
    }

        .search-btn:hover {
            background-color: #3a5688;
        }

    #reportTable {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        #reportTable th, #reportTable td {
            padding: 10px;
            text-align: right;
            border: 1px solid #ddd;
        }

        #reportTable th {
            background-color: #4a6baf;
            color: white;
        }

        #reportTable tr:nth-child(even) {
            background-color: #f2f2f2;
        }

    .hierarchy {
        color: #555;
        font-style: italic;
    }

    .origin::after {
        content: " →";
        color: #aaa;
    }
</style>

<script>
       $(document).ready(function () {
        const messages = {
            error: 'خطا در دریافت داده‌ها',
            noData: 'هیچ داده‌ای برای نمایش وجود ندارد.'
        };

        // Warehouse → Zone → Section
        $('#warehouse').on('change', function () {
            const warehouseId = $(this).val();
            $('#zone').empty().append('<option value="">انتخاب منطقه</option>');
            $('#section').empty().append('<option value="">انتخاب بخش</option>');

            if (warehouseId) {
                fetch(`/WarehouseManagement/InventoryTransactionReport/GetZonesByWarehouseId?warehouseId=${warehouseId}`)
                    .then(res => {
                        if (!res.ok) throw new Error(messages.error);
                        return res.json();
                    })
                    .then(zones => {
                        $('#zone').empty().append('<option value="">انتخاب منطقه</option>');
                        if (zones.length === 0) {
                            alert('هیچ منطقه‌ای برای این انبار یافت نشد.');
                        } else {
                            zones.forEach(z => {
                                $('#zone').append(`<option value="${z.value}">${z.text}</option>`);
                            });
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert(messages.error);
                        $('#zone').empty().append('<option value="">انتخاب منطقه</option>');
                    });
            }
        });

        $('#zone').on('change', function () {
            const zoneId = $(this).val();
            $('#section').empty().append('<option value="">انتخاب بخش</option>');

            if (zoneId) {
                fetch(`/WarehouseManagement/InventoryTransactionReport/GetSectionsByZoneIds?zoneIds=${zoneId}`)
                    .then(res => {
                        if (!res.ok) throw new Error(messages.error);
                        return res.json();
                    })
                    .then(sections => {
                        $('#section').empty().append('<option value="">انتخاب بخش</option>');
                        if (sections.length === 0) {
                            alert('هیچ بخشی برای این منطقه یافت نشد.');
                        } else {
                            sections.forEach(s => {
                                $('#section').append(`<option value="${s.value}">${s.text}</option>`);
                            });
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert(messages.error);
                        $('#section').empty().append('<option value="">انتخاب بخش</option>');
                    });
            }
        });

        // Category → Group → Status → Product
        $('#category').on('change', function () {
            const categoryId = $(this).val();
            $('#group').empty().append('<option value="">انتخاب گروه</option>');
            $('#status').empty().append('<option value="">انتخاب وضعیت</option>');
            $('#product').empty().append('<option value="">انتخاب کالا</option>');

            if (categoryId) {
                fetch(`/WarehouseManagement/InventoryTransactionReport/GetGroupsByCategoryId?categoryId=${categoryId}`)
                    .then(res => {
                        if (!res.ok) throw new Error(messages.error);
                        return res.json();
                    })
                    .then(groups => {
                        $('#group').empty().append('<option value="">انتخاب گروه</option>');
                        if (groups.length === 0) {
                            alert('هیچ گروهی برای این دسته‌بندی یافت نشد.');
                        } else {
                            groups.forEach(g => {
                                $('#group').append(`<option value="${g.value}">${g.text}</option>`);
                            });
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert(messages.error);
                        $('#group').empty().append('<option value="">انتخاب گروه</option>');
                    });
            }
        });

        $('#group').on('change', function () {
            const groupId = $(this).val();
            $('#status').empty().append('<option value="">انتخاب وضعیت</option>');
            $('#product').empty().append('<option value="">انتخاب کالا</option>');

            if (groupId) {
                fetch(`/WarehouseManagement/InventoryTransactionReport/GetStatusesByGroupId?groupId=${groupId}`)
                    .then(res => {
                        if (!res.ok) throw new Error(messages.error);
                        return res.json();
                    })
                    .then(statuses => {
                        $('#status').empty().append('<option value="">انتخاب وضعیت</option>');
                        if (statuses.length === 0) {
                            alert('هیچ وضعیتی برای این گروه یافت نشد.');
                        } else {
                            statuses.forEach(s => {
                                $('#status').append(`<option value="${s.value}">${s.text}</option>`);
                            });
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert(messages.error);
                        $('#status').empty().append('<option value="">انتخاب وضعیت</option>');
                    });
            }
        });

        $('#status').on('change', function () {
            const statusId = $(this).val();
            $('#product').empty().append('<option value="">انتخاب کالا</option>');

            if (statusId) {
                fetch(`/WarehouseManagement/InventoryTransactionReport/GetProductsByStatusId?statusId=${statusId}`)
                    .then(res => {
                        if (!res.ok) throw new Error(messages.error);
                        return res.json();
                    })
                    .then(products => {
                        $('#product').empty().append('<option value="">انتخاب کالا</option>');
                        if (products.length === 0) {
                            alert('هیچ کالایی برای این وضعیت یافت نشد.');
                        } else {
                            products.forEach(p => {
                                $('#product').append(`<option value="${p.value}">${p.text}</option>`);
                            });
                        }
                    })
                    .catch(err => {
                        console.error(err);
                        alert(messages.error);
                        $('#product').empty().append('<option value="">انتخاب کالا</option>');
                    });
            }
        });

        // Search button click event
        $('#searchBtn').on('click', function () {
            const filter = {
                WarehouseName: $('#warehouse option:selected').text(),
                DepartmentName: $('#zone option:selected').text(),
                SectionName: $('#section option:selected').text(),
                CategoryName: $('#category option:selected').text(),
                GroupName: $('#group option:selected').text(),
                StatusName: $('#status option:selected').text(),
                ProductName: $('#product option:selected').text(),
                FromDate: $('#fromDate').val(),
                ToDate: $('#toDate').val(),
                DocumentType: $('#docType').val()
            };

            fetch(`/WarehouseManagement/InventoryTransactionReport/GetReport?${$.param(filter)}`)
                .then(res => {
                    if (!res.ok) throw new Error(messages.error);
                    return res.json();
                })
                .then(data => {
                    $('#reportBody').empty();
                    if (data.length === 0) {
                        $('#reportTable').hide();
                        alert(messages.noData);
                    } else {
                        data.forEach(item => {
                            $('#reportBody').append(`
                                <tr>
                                    <td>${item.date}</td>
                                    <td>${item.productName}</td>
                                    <td>${item.sourceWarehouseName || ''} ${item.sourceDepartmentName || ''} ${item.sourceSectionName || ''}</td>
                                    <td>${item.destinationWarehouseName || ''} ${item.destinationDepartmentName || ''} ${item.destinationSectionName || ''}</td>
                                    <td>${item.documentType}</td>
                                    <td>${item.documentNumber}</td>
                                    <td>${item.quantity}</td>
                                </tr>
                            `);
                        });
                        $('#reportTable').show();
                    }
                })
                .catch(err => {
                    console.error(err);
                    alert(messages.error);
                    $('#reportTable').hide();
                });
        });
    });
</script>
