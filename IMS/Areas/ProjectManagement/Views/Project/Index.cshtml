@using IMS.Application.ProjectManagement.Helper
@using IMS.Areas.ProjectManagement.Helper
@model List<IMS.Application.ProjectManagement.DTOs.ProjectDto>
@{
    ViewData["Title"] = "مدیریت پروژه‌ها";
    Layout = "~/Areas/ProjectManagement/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/fontawesome/css/all.min.css" />
<link href="~/vazirmatn/webfonts.css" rel="stylesheet" />

<div class="container-fluid py-2" dir="rtl">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-project-diagram me-1" style="font-size: 0.85rem;"></i>
                        <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;"> @ViewData["Title"] </h5>
                    </div>

                    <div class="d-flex align-items-center gap-1">
                        <div class="search-box" style="width: 180px;">
                            <div class="input-group input-group-sm">
                                <span class="input-group-text bg-white text-secondary p-1">
                                    <i class="fas fa-search" style="font-size: 0.8rem;"></i>
                                </span>
                                <input type="text"
                                       id="globalSearch"
                                       class="form-control form-control-sm p-1"
                                       placeholder="جستجو..."
                                       dir="rtl"
                                       style="height: 20px; font-size: 0.8rem;">
                            </div>
                        </div>

                        <a asp-action="Create"
                           class="btn btn-sm btn-light d-flex align-items-center py-1 px-2"
                           style="height: 28px; font-size: 0.8rem;">
                            <i class="fas fa-plus me-1" style="font-size: 0.8rem;"></i>
                            <span>پروژه جدید</span>
                        </a>
                    </div>
                </div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show mx-2 my-1 py-1" role="alert" style="font-size: 0.8rem;">
                        <i class="fas fa-check-circle me-1" style="font-size: 0.85rem;"></i>
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close p-1" data-bs-dismiss="alert" aria-label="Close" style="font-size: 0.7rem;"></button>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show mx-2 my-1 py-1" role="alert" style="font-size: 0.8rem;">
                        <i class="fas fa-exclamation-circle me-1" style="font-size: 0.85rem;"></i>
                        @TempData["ErrorMessage"]
                        <button type="button" class="btn-close p-1" data-bs-dismiss="alert" aria-label="Close" style="font-size: 0.7rem;"></button>
                    </div>
                }

                <div class="card-body p-1">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-info alert-dismissible fade show mx-2 my-1 py-1 text-center" role="alert" style="font-size: 0.8rem;">
                            <i class="fas fa-info-circle me-1" style="font-size: 0.85rem;"></i>
                            هیچ پروژه‌ای ثبت نشده است
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-sm mb-0">
                                <thead style="background-color: #f8f9fa; font-size: 0.82rem;">
                                    <tr>
                                        <th class="text-center py-1">#</th>
                                        <th class="text-center py-1">عنوان پروژه</th>
                                        <th class="text-center py-1">کارفرما</th>
                                        <th class="text-center py-1">نوع پروژه</th>
                                        <th class="text-center py-1">تاریخ شروع</th>
                                        <th class="text-center py-1">تاریخ پایان</th>
                                        <th class="text-center py-1">درصد پیشرفت</th>
                                        <th class="text-center py-1">وضعیت</th>
                                        <th class="text-center py-1">عملیات</th>
                                    </tr>
                                </thead>
                                <tbody style="font-size: 0.8rem;">
                                    @for (int i = Model.Count - 1; i >= 0; i--)
                                    {
                                        var item = Model[i];
                                        var progressColor = item.ProgressPercent switch
                                        {
                                            >= 80 => "bg-success",
                                            >= 50 => "bg-info",
                                            >= 30 => "bg-warning",
                                            _ => "bg-danger"
                                        };

                                        <tr style="height: 32px;">
                                            <td class="text-center fw-bold py-1 align-middle">@(i + 1)</td>
                                            <td class="text-center py-1 align-middle">@item.ProjectName</td>
                                            <td class="text-center py-1 align-middle">@item.EmployerName</td>
                                            <td class="text-center py-1 align-middle">@item.ProjectTypeName</td>
                                            <td class="text-center py-1 align-middle">@item.StartDate.ToShamsi()</td>
                                            <td class="text-center py-1 align-middle">@item.EndDate.ToShamsi()</td>
                                            <td class="text-center py-1 align-middle">
                                                <div class="progress" style="height: 18px;">
                                                    <div class="progress-bar @progressColor progress-bar-striped progress-bar-animated"
                                                         style="width: @item.ProgressPercent%; font-size: 0.7rem; line-height: 18px;">
                                                        @item.ProgressPercent%
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="text-center py-1 align-middle">
                                                <span class="badge rounded-pill bg-secondary" style="font-size: 0.75rem;">
                                                    @item.Status.GetDisplayName()
                                                </span>
                                            </td>
                                            <td class="text-center py-1 align-middle">
                                                <div class="d-flex justify-content-center gap-1">
                                                    <a asp-action="Edit"
                                                       asp-route-id="@item.Id"
                                                       class="btn btn-sm btn-outline-warning px-1"
                                                       style="font-size: 0.75rem; min-width: 26px; height: 26px;">
                                                        <i class="fas fa-edit"></i>
                                                    </a>

                                                 <form asp-action="DeleteConfirmed" asp-route-id="@item.Id" method="post" class="d-inline">
    <button type="submit"
            class="btn btn-sm btn-outline-danger px-1"
            style="font-size: 0.75rem; min-width: 26px; height: 26px;"
            onclick="return confirm('آیا از حذف این پروژه مطمئن هستید؟');">
        <i class="fas fa-trash-alt"></i>
    </button>
</form>

                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>

                <div class="d-flex justify-content-center mt-2">
                    <nav>
                        <ul class="pagination pagination-sm mb-0" id="paginationContainer"></ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="/js/MenuJs.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const globalSearch = document.getElementById('globalSearch');
            const table = document.querySelector('table');
            const rows = table.querySelectorAll('tbody tr');
            const noResultsRow = document.createElement('tr');
            noResultsRow.innerHTML = '<td colspan="9" class="text-center py-2 text-muted" style="font-size: 0.8rem;">نتیجه‌ای یافت نشد</td>';

            globalSearch.addEventListener('input', function() {
                const term = this.value.trim().toLowerCase();
                let hasResults = false;

                rows.forEach(row => {
                    let rowMatches = false;
                    const cells = row.querySelectorAll('td:not(:last-child)');

                    cells.forEach(cell => {
                        if (cell.textContent.toLowerCase().includes(term)) {
                            rowMatches = true;
                        }
                    });

                    if (rowMatches) {
                        row.style.display = '';
                        hasResults = true;

                        if (term.length > 0) {
                            cells.forEach(cell => {
                                const text = cell.textContent;
                                const highlighted = text.replace(
                                    new RegExp(term, 'gi'),
                                    match => `<span class="bg-warning">${match}</span>`
                                );
                                cell.innerHTML = highlighted;
                            });
                        }
                    } else {
                        row.style.display = 'none';
                    }
                });

                const existingNoResults = table.querySelector('.no-results');
                if (existingNoResults) {
                    existingNoResults.remove();
                }

                if (!hasResults && term.length > 0) {
                    table.querySelector('tbody').appendChild(noResultsRow);
                    noResultsRow.classList.add('no-results');
                }
            });

            const rowsPerPage = 20;
            let currentPage = 1;

            function paginateTable() {
                const rows = Array.from(table.querySelectorAll('tbody tr:not(.no-results)'));
                const totalPages = Math.ceil(rows.length / rowsPerPage);

                // مخفی کردن همه ردیف‌ها
                rows.forEach(row => row.style.display = 'none');

                // فقط نمایش ردیف‌های صفحه فعلی
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                rows.slice(start, end).forEach(row => row.style.display = '');

                // ایجاد دکمه‌های صفحه‌بندی
                const paginationContainer = document.getElementById('paginationContainer');
                paginationContainer.innerHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.classList.add('page-item');
                    if (i === currentPage) li.classList.add('active');

                    const a = document.createElement('a');
                    a.classList.add('page-link');
                    a.href = '#';
                    a.style.fontSize = '0.75rem';
                    a.innerText = i;

                    a.addEventListener('click', function (e) {
                        e.preventDefault();
                        currentPage = i;
                        paginateTable();
                    });

                    li.appendChild(a);
                    paginationContainer.appendChild(li);
                }
            }

            // فراخوانی صفحه‌بندی بعد از بارگذاری
            if (table) {
                paginateTable();
            }

            // فعال‌سازی tooltip
            $('[data-bs-toggle="tooltip"]').tooltip();
        });
    </script>
}