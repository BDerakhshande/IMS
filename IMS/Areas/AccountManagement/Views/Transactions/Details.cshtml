@using IMS.Areas.AccountManagement.Helper
@using IMS.Areas.AccountManagement.Models
@model IMS.Areas.AccountManagement.Models.TransactionDocumentDetailsViewModel

@{
    ViewData["Title"] = "جزئیات سند";
    Layout = "~/Areas/AccountManagement/Views/Shared/_Layout.cshtml";
}

<style>
    .highlight {
        background-color: orange;
        padding: 0 2px;
        border-radius: 2px;
    }

    .transaction-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .transaction-table td, .transaction-table th {
        padding: 0.3rem 0.5rem !important;
        vertical-align: middle !important;
        font-size: 0.8rem;
    }

    .debit-cell {
        color: #dc3545;
        font-weight: bold;
    }

    .credit-cell {
        color: #28a745;
        font-weight: bold;
    }

    .search-btn {
        padding: 0.2rem 0.4rem;
        font-size: 0.7rem;
    }

    .action-btn {
        width: 26px;
        height: 26px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .transaction-table thead tr:first-child th:first-child {
        border-top-right-radius: 5px;
    }

    .transaction-table thead tr:first-child th:last-child {
        border-top-left-radius: 5px;
    }

    .transaction-table tbody tr:last-child td:first-child {
        border-bottom-right-radius: 5px;
    }

    .transaction-table tbody tr:last-child td:last-child {
        border-bottom-left-radius: 5px;
    }

    /* وسط چین کردن محتوای input و select */
    .transaction-table select.form-select-sm,
    .transaction-table input.form-control-sm {
        text-align: center !important;
    }

    /* برای حالت hover روی ردیف‌ها */
    .transaction-table tbody tr:hover {
        background-color: #f8f9fa;
    }
</style>

<div class="container-fluid py-2" dir="rtl">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-file-invoice me-1" style="font-size: 0.85rem; margin-left: 0.5rem;"></i>
                        <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
                    </div>
                </div>

                <div class="card-body p-2">
                    @if (Model.DocumentStatus == Status.Confirmation)
                    {
                        <div class="alert alert-warning alert-dismissible fade show mb-3 py-2" role="alert" style="font-size: 0.8rem;">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            <strong>توجه:</strong> این سند تأیید شده است و امکان ویرایش آن وجود ندارد.
                            <button type="button" class="btn-close p-0" style="font-size: 0.7rem;" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-action="SaveDocumentDetails" method="post" id="documentForm">
                        <input type="hidden" name="DocumentId" value="@Model.DocumentId" />
                        <input type="hidden" name="DocumentDate" value="@Model.DocumentDate" />

                        <div class="mb-3">
                            <label for="Description" class="form-label" style="font-size: 0.8rem;">شرح سند:</label>
                            @Html.TextAreaFor(model => model.Description, new {
                            @class = "form-control form-control-sm",
                                                        rows = 2,
                                                        style = "font-size: 0.8rem;",
                                                        @readonly = Model.DocumentStatus == Status.Confirmation ? "readonly" : null
                                                        })
                        </div>
                        <div class="card-body p-2">
                            <div class="table-responsive pe-0">
                                <table class="table table-sm transaction-table" style=" border-radius: 10px; overflow: hidden;">
                                    <thead style="background-color: #1a4959; color: white; font-size: 0.75rem;">
                                        <tr>
                                            <th class="text-center py-1" style="width: 50px;">ردیف</th>
                                            <th class="text-center py-1" style="width: 220px;">کد کل</th>
                                            <th class="text-center py-1" style="width: 150px;">کد معین</th>
                                            <th class="text-center py-1" style="width: 190px;">کد تفصیل ۱</th>
                                            <th class="text-center py-1" style="width: 310px;">کد تفصیل ۲</th>
                                            <th class="text-center py-1" style="width: 170px;">شرح تراکنش</th>
                                            <th class="text-center py-1" style="width: 150px;">بدهکار</th>
                                            <th class="text-center py-1" style="width: 150px;">بستانکار</th>
                                            <th class="text-center py-1" style="width: 60px;">عملیات</th>
                                        
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Transactions.Count; i++)
                                        {
                                            <tr>
                                                <td class="text-center align-middle">@(i + 1)</td>
                                                <td class="text-center">
                                                    <select name="Transactions[@i].MainAccountId" class="form-select form-select-sm" data-index="@i" disabled="@(Model.DocumentStatus == Status.Confirmation)">
                                                        <option value="">انتخاب حساب کل</option>
                                                        @foreach (var account in Model.MainAccounts)
                                                        {
                                                            <option value="@account.Value" selected="@(account.Value == Model.Transactions[i].MainAccountId?.ToString() ? "selected" : null)">@account.Text</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td class="text-center">
                                                    <select name="Transactions[@i].SubAccountId" class="form-select form-select-sm" data-index="@i" disabled="@(Model.DocumentStatus == Status.Confirmation)">
                                                        <option value="">انتخاب حساب معین</option>
                                                        @if (Model.Transactions[i].MainAccountId.HasValue && Model.SubAccounts.ContainsKey(Model.Transactions[i].MainAccountId.Value))
                                                        {
                                                            foreach (var moein in Model.SubAccounts[Model.Transactions[i].MainAccountId.Value])
                                                            {
                                                                <option value="@moein.Value" selected="@(moein.Value == Model.Transactions[i].SubAccountId?.ToString() ? "selected" : null)">@moein.Text</option>
                                                            }
                                                        }
                                                    </select>
                                                </td>
                                                <td class="text-center">
                                                    <select name="Transactions[@i].DetailAccount1Id" class="form-select form-select-sm" data-index="@i" disabled="@(Model.DocumentStatus == Status.Confirmation)">
                                                        <option value="">انتخاب تفصیل ۱</option>
                                                        @if (Model.Transactions[i].SubAccountId.HasValue && Model.DetailAccounts1.ContainsKey(Model.Transactions[i].SubAccountId.Value))
                                                        {
                                                            foreach (var tafzil in Model.DetailAccounts1[Model.Transactions[i].SubAccountId.Value])
                                                            {
                                                                <option value="@tafzil.Value" selected="@(tafzil.Value == Model.Transactions[i].DetailAccount1Id?.ToString() ? "selected" : null)">@tafzil.Text</option>
                                                            }
                                                        }
                                                    </select>
                                                </td>
                                                <td class="text-center">
                                                    <select name="Transactions[@i].DetailAccount2Id" class="form-select form-select-sm" data-index="@i" disabled="@(Model.DocumentStatus == Status.Confirmation)">
                                                        <option value="">انتخاب تفصیل ۲</option>
                                                        @if (Model.Transactions[i].DetailAccount1Id.HasValue && Model.DetailAccounts2.ContainsKey(Model.Transactions[i].DetailAccount1Id.Value))
                                                        {
                                                            foreach (var tafzil2 in Model.DetailAccounts2[Model.Transactions[i].DetailAccount1Id.Value])
                                                            {
                                                                <option value="@tafzil2.Value" selected="@(tafzil2.Value == Model.Transactions[i].DetailAccount2Id?.ToString() ? "selected" : null)">@tafzil2.Text</option>
                                                            }
                                                        }
                                                    </select>
                                                </td>
                                                <td class="text-center align-middle">
                                                    <input type="text" name="Transactions[@i].DescriptionTran" class="form-control form-control-sm" value="@Model.Transactions[i].DescriptionTran" disabled="@(Model.DocumentStatus == Status.Confirmation)" />
                                                </td>
                                                <td class="text-center align-middle debit-cell">
                                                    <input type="number" name="Transactions[@i].Debit" class="form-control form-control-sm text-end" value="@Model.Transactions[i].Debit" step="0.01" min="0" disabled="@(Model.DocumentStatus == Status.Confirmation)" />
                                                </td>
                                                <td class="text-center align-middle credit-cell">
                                                    <input type="number" name="Transactions[@i].Credit" class="form-control form-control-sm text-end" value="@Model.Transactions[i].Credit" step="0.01" min="0" disabled="@(Model.DocumentStatus == Status.Confirmation)" />
                                                </td>
                                                <td class="text-center align-middle">
                                                    @if (Model.DocumentStatus != Status.Confirmation)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-danger action-btn" onclick="deleteRow(this)">
                                                            <i class="fas fa-trash-alt" style="font-size: 0.7rem;"></i>
                                                        </button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="d-flex flex-row-reverse justify-content-between mt-3">
                            @if (Model.DocumentStatus != Status.Confirmation)
                            {
                                <div>
                                    <button type="button" class="btn btn-sm btn-success" onclick="addNewRow()" style="font-size: 0.8rem;">
                                        <i class="fas fa-plus-circle me-1"></i> افزودن ردیف
                                    </button>
                                    <button type="submit" class="btn btn-sm btn-primary" style="font-size: 0.8rem;">
                                        <i class="fas fa-save me-1"></i> ذخیره سند
                                    </button>
                                </div>
                            }
                            <div>
                                <a href="@Url.Action("Index", "Transactions")" class="btn btn-sm btn-secondary" style="font-size: 0.8rem;">
                                    <i class="fas fa-arrow-right me-1"></i> بازگشت
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search Modal -->
<div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header py-2" style="background-color: #1a4959; color: white;">
                <h6 class="modal-title" id="searchModalLabel" style="font-size: 0.9rem;">
                    <i class="fas fa-search me-1"></i> جستجوی تفصیل ۲
                </h6>
                <button type="button" class="btn-close btn-close-white p-1 m-0" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-2">
                <div class="input-group input-group-sm mb-3">
                    <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="نام یا کد تفصیل ۲ را وارد کنید" style="font-size: 0.8rem;">
                    <button class="btn btn-sm btn-outline-secondary" type="button" id="searchButton" style="font-size: 0.8rem;">
                        <i class="fas fa-search"></i>
                    </button>
                </div>

                <div id="searchResults" class="table-responsive" style="display:none;">
                    <table class="table table-sm table-bordered table-striped">
                        <thead class="table-light" style="font-size: 0.75rem;">
                            <tr>
                                <th class="text-center">کل</th>
                                <th class="text-center">معین</th>
                                <th class="text-center">تفصیل ۱</th>
                                <th class="text-center">تفصیل ۲</th>
                            </tr>
                        </thead>
                        <tbody id="tafzil2ResultsBody" style="font-size: 0.75rem;"></tbody>
                    </table>
                </div>

                <div id="noResults" class="text-center text-muted py-2" style="font-size: 0.8rem; display: none;">
                    <i class="fas fa-info-circle me-1"></i> نتیجه‌ای یافت نشد!
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Help Modal -->
<div id="helpModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header py-2" style="background-color: #1a4959; color: white;">
                <h6 class="modal-title" style="font-size: 0.9rem;">
                    <i class="fas fa-question-circle me-1"></i> راهنمای صفحه
                </h6>
                <button type="button" class="btn-close btn-close-white p-1 m-0" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-3" style="font-size: 0.8rem;">
                <ul class="list-unstyled mb-0">
                    <li class="mb-2"><kbd>↑</kbd> و <kbd>↓</kbd> → حرکت بین ردیف‌ها</li>
                    <li class="mb-2"><kbd>Delete</kbd> → حذف تراکنش</li>
                    <li class="mb-2"><kbd>Shift + S</kbd> → جستجوی تفصیل ۲</li>
                    <li class="mb-2"><kbd>Ctrl + Enter</kbd> → ذخیره سند</li>
                    <li class="mb-2"><kbd>Enter</kbd> → افزودن ردیف جدید</li>
                    <li><kbd>Shift + H</kbd> → نمایش/پنهان کردن راهنما</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/MenuJs.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/select2/js/select2.full.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function () {
            let selectedIndex = -1;
            let currentResults = [];
            let currentRowIndex = -1;

            $(document).on('click', '.open-search-modal', function () {
                currentRowIndex = $(this).closest('tr').index();

                $('#searchInput').val('');
                $('#tafzil2ResultsBody').empty();
                $('#searchResults, #noResults').hide();

                $('#searchModal').modal('show');
                $('#searchInput').focus();
            });

            $(document).on('keydown', function (e) {
                if (e.shiftKey && e.key === 'S') {
                    e.preventDefault();
                    $('#searchInput').val('');
                    $('#tafzil2ResultsBody').empty();
                    $('#searchResults, #noResults').hide();
                    $('#searchModal').modal('show');
                    setTimeout(() => {
                        $('#searchInput').focus();
                    }, 200);
                }

                if (e.shiftKey && e.key.toLowerCase() === 'h') {
                    e.preventDefault();
                    $('#helpModal').modal('show');
                }
            });

            function renderRows(data) {
                currentResults = data;
                selectedIndex = -1;

                if (data.length === 0) {
                    $('#searchResults').hide();
                    $('#noResults').show();
                    return;
                }

                const html = data.map((item, idx) => `
                    <tr data-index="${idx}">
                        <td>${item.kolCode} - ${item.kolName}</td>
                        <td>${item.moienCode} - ${item.moienName}</td>
                        <td>${item.tafzil1Code} - ${item.tafzil1Name}</td>
                        <td>${item.tafzil2Code} - ${item.tafzil2Name}</td>
                    </tr>`).join('');
                $('#tafzil2ResultsBody').html(html);
                $('#searchResults').show();
                $('#noResults').hide();
            }

            function debounce(fn, delay) {
                let timeout;
                return function (...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => fn.apply(this, args), delay);
                };
            }

            $('#searchInput').on('input', debounce(function () {
                const term = $(this).val().trim();
                if (!term) {
                    console.warn("⚠️ ورودی خالی است، نمایش نتایج متوقف شد");
                    $('#searchResults, #noResults').hide();
                    return;
                }

                $.getJSON('/AccountManagement/Transactions/SearchTafzil2', { searchTerm: term })
                    .done(function (data) {
                        renderRows(data);
                    })
                    .fail(function (err) {
                        console.error("🚫 خطا در دریافت داده‌ها:", err);
                    });
            }, 300));

            $('#transactionsTable tbody').on('click', 'tr', function () {
                currentRowIndex = $(this).index();
            });

            $('#searchModal').on('keydown', function (e) {
                const rows = $('#tafzil2ResultsBody tr');
                if (!rows.length) {
                    console.warn("❌ هیچ ردیفی در جدول نتایج وجود ندارد");
                    return;
                }

                switch (e.key) {
                    case 'ArrowDown':
                        e.preventDefault();
                        selectedIndex = Math.min(selectedIndex + 1, rows.length - 1);
                        highlightRow(rows);
                        break;

                    case 'ArrowUp':
                        e.preventDefault();
                        selectedIndex = Math.max(selectedIndex - 1, 0);
                        highlightRow(rows);
                        break;

                    case 'Enter':
                        e.preventDefault();
                        const item = currentResults?.[selectedIndex];
                        if (!item) {
                            return;
                        }
                        selectTafzil2(
                            item.kolCode,
                            item.moienCode,
                            item.tafzil1Code,
                            item.tafzil2Id,
                            item.tafzil2Code,
                            item.tafzil2Name,
                            item.kolName,
                            item.moienName,
                            item.tafzil1Name
                        );
                        break;
                }
            });

            function highlightRow(rows) {
                rows.removeClass('table-active').css('background-color', '');
                if (selectedIndex >= 0) {
                    $(rows[selectedIndex]).addClass('table-active').css('background-color', '#d0ebff');
                }
            }

            $(document).on('click', '#tafzil2ResultsBody tr', function () {
                selectedIndex = $(this).data('index');
                highlightRow($('#tafzil2ResultsBody tr'));
                if (selectedIndex >= 0 && currentResults[selectedIndex]) {
                    const item = currentResults[selectedIndex];
                    selectTafzil2(
                        item.kolCode,
                        item.moienCode,
                        item.tafzil1Code,
                        item.tafzil2Id,
                        item.tafzil2Code,
                        item.tafzil2Name,
                        item.kolName,
                        item.moienName,
                        item.tafzil1Name
                    );
                }
            });

            function selectTafzil2(mainId, subId, detail1Id, detail2Id, code, name, mainName, subName, detail1Name) {
                if (currentRowIndex < 0) {
                    console.warn("⚠️ currentRowIndex نامعتبر است");
                    return;
                }

                const $row = $('#transactionsTable tbody tr').eq(currentRowIndex);
                if (!$row.length) {
                    console.warn("⚠️ ردیف انتخاب‌شده در جدول تراکنش‌ها یافت نشد");
                    return;
                }

                let $selectMain = $row.find('select[name^="Transactions["][name$=".MainAccountId"]');
                if ($selectMain.find(`option[value="${mainId}"]`).length === 0) {
                    $selectMain.append(`<option value="${mainId}">${mainName}</option>`);
                }
                $selectMain.val(mainId).trigger('change');

                let $selectSub = $row.find('select[name^="Transactions["][name$=".SubAccountId"]');
                if ($selectSub.find(`option[value="${subId}"]`).length === 0) {
                    $selectSub.append(`<option value="${subId}">${subName}</option>`);
                }
                $selectSub.val(subId).trigger('change');

                let $selectDetail1 = $row.find('select[name^="Transactions["][name$=".DetailAccount1Id"]');
                if ($selectDetail1.find(`option[value="${detail1Id}"]`).length === 0) {
                    $selectDetail1.append(`<option value="${detail1Id}">${detail1Name}</option>`);
                }
                $selectDetail1.val(detail1Id).trigger('change');

                let $selectDetail2 = $row.find('select[name^="Transactions["][name$=".DetailAccount2Id"]');
                if ($selectDetail2.find(`option[value="${detail2Id}"]`).length === 0) {
                    $selectDetail2.append(`<option value="${detail2Id}">${code} - ${name}</option>`);
                }
                $selectDetail2.val(detail2Id).trigger('change');

                $('#searchModal').modal('hide');
            }
        });

        $(document).ready(function () {
            const subAccounts = @Html.Raw(Json.Serialize(Model.SubAccounts));
            const detailAccounts1 = @Html.Raw(Json.Serialize(Model.DetailAccounts1));
            const detailAccounts2 = @Html.Raw(Json.Serialize(Model.DetailAccounts2));
            let rowCount = $('#transactionsTable tbody tr').length;
            let currentRowIndex = null;

            // Add new row
            window.addNewRow = function () {
                const newRow = `
                    <tr>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-outline-primary search-btn open-search-modal" data-row-index="${rowCount}" title="جستجو">
                                <i class="fas fa-search" style="font-size: 0.7rem;"></i>
                            </button>
                        </td>
                        <td class="text-center">${rowCount + 1}</td>
                        <td>
                            <select name="Transactions[${rowCount}].MainAccountId" class="form-select form-select-sm" data-index="${rowCount}">
                                <option value="">انتخاب حساب کل</option>
                                ${$('#transactionsTable tbody tr:first select[name^="Transactions["][name$=".MainAccountId"] option').clone().filter(':gt(0)').map(function () {
                                    return `<option value="${this.value}">${this.text}</option>`;
                                }).get().join('')}
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].SubAccountId" class="form-select form-select-sm" data-index="${rowCount}">
                                <option value="">انتخاب حساب معین</option>
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].DetailAccount1Id" class="form-select form-select-sm" data-index="${rowCount}">
                                <option value="">انتخاب تفصیل ۱</option>
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].DetailAccount2Id" class="form-select form-select-sm" data-index="${rowCount}">
                                <option value="">انتخاب تفصیل ۲</option>
                            </select>
                        </td>
                        <td>
                            <input type="text" name="Transactions[${rowCount}].DescriptionTran" class="form-control form-control-sm" />
                        </td>
                        <td class="debit-cell">
                            <input type="number" name="Transactions[${rowCount}].Debit" class="form-control form-control-sm" step="0.01" min="0" />
                        </td>
                        <td class="credit-cell">
                            <input type="number" name="Transactions[${rowCount}].Credit" class="form-control form-control-sm" step="0.01" min="0" />
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm btn-outline-danger action-btn" onclick="deleteRow(this)">
                                <i class="fas fa-trash-alt" style="font-size: 0.7rem;"></i>
                            </button>
                        </td>
                    </tr>`;
                $('#transactionsTable tbody').append(newRow);
                rowCount++;
            };

            // Delete row
            window.deleteRow = function (button) {
                const row = $(button).closest('tr');
                row.fadeOut(200, function () {
                    row.remove();
                    $('#transactionsTable tbody tr').each(function (index) {
                        $(this).find('td:eq(1)').text(index + 1);
                    });
                });
            };

            // Handle MainAccountId change
            $(document).on('change', 'select[name^="Transactions["][name$=".MainAccountId"]', function () {
                const index = $(this).data('index');
                const mainAccountId = $(this).val();
                const subAccountSelect = $(`select[name='Transactions[${index}].SubAccountId']`);
                const detailAccount1Select = $(`select[name='Transactions[${index}].DetailAccount1Id']`);
                const detailAccount2Select = $(`select[name='Transactions[${index}].DetailAccount2Id']`);

                subAccountSelect.empty().append('<option value="">انتخاب حساب معین</option>');
                detailAccount1Select.empty().append('<option value="">انتخاب تفصیل ۱</option>');
                detailAccount2Select.empty().append('<option value="">انتخاب تفصیل ۲</option>');

                if (mainAccountId && subAccounts[mainAccountId]) {
                    subAccounts[mainAccountId].forEach(sa => {
                        subAccountSelect.append(`<option value="${sa.value}">${sa.text}</option>`);
                    });
                }
            });

            // Handle SubAccountId change
            $(document).on('change', 'select[name^="Transactions["][name$=".SubAccountId"]', function () {
                const index = $(this).data('index');
                const subAccountId = $(this).val();
                const detailAccount1Select = $(`select[name='Transactions[${index}].DetailAccount1Id']`);
                const detailAccount2Select = $(`select[name='Transactions[${index}].DetailAccount2Id']`);

                detailAccount1Select.empty().append('<option value="">انتخاب تفصیل ۱</option>');
                detailAccount2Select.empty().append('<option value="">انتخاب تفصیل ۲</option>');

                if (subAccountId && detailAccounts1[subAccountId]) {
                    detailAccounts1[subAccountId].forEach(item => {
                        if (item && item.value && item.text) {
                            detailAccount1Select.append(`<option value="${item.value}">${item.text}</option>`);
                        }
                    });
                }
            });

            // Handle DetailAccount1Id change
            $(document).on('change', 'select[name^="Transactions["][name$=".DetailAccount1Id"]', function () {
                const index = $(this).data('index');
                const detailAccount1Id = $(this).val();
                const detailAccount2Select = $(`select[name='Transactions[${index}].DetailAccount2Id']`);

                detailAccount2Select.empty().append('<option value="">انتخاب تفصیل ۲</option>');

                if (detailAccount1Id && detailAccounts2[detailAccount1Id]) {
                    detailAccounts2[detailAccount1Id].forEach(item => {
                        if (item && item.value && item.text) {
                            detailAccount2Select.append(`<option value="${item.value}">${item.text}</option>`);
                        }
                    });
                }
            });
        });

        document.addEventListener("keydown", function (e) {
            const active = document.activeElement;
            const isInputOrSelect = active.tagName === "INPUT" || active.tagName === "SELECT";
            if (!isInputOrSelect) return;

            const currentCell = active.closest("td");
            const currentRow = active.closest("tr");
            if (!currentCell || !currentRow) return;

            const tableBody = document.querySelector("#transactionsTable tbody");
            const allRows = Array.from(tableBody.querySelectorAll("tr"));
            const cells = Array.from(currentRow.querySelectorAll("input, select"));
            const cellIndex = cells.indexOf(active);
            const rowIndex = allRows.indexOf(currentRow);

            let target;

            switch (e.key) {
                case "ArrowRight":
                    if (cellIndex > 0) {
                        target = cells[cellIndex - 1];
                    }
                    break;

                case "ArrowLeft":
                    if (cellIndex < cells.length - 1) {
                        target = cells[cellIndex + 1];
                    }
                    break;

                case "Enter":
                    e.preventDefault();
                    if (cellIndex < cells.length - 1) {
                        target = cells[cellIndex + 1];
                    } else if (rowIndex === allRows.length - 1) {
                        addNewRow();
                        const newRow = allRows[allRows.length - 1];
                        const newFirstInput = newRow.querySelector("input, select");
                        if (newFirstInput) newFirstInput.focus();
                    }
                    break;

                case "ArrowDown":
                    const nextRow = currentRow.nextElementSibling;
                    if (nextRow) {
                        const nextInputs = Array.from(nextRow.querySelectorAll("input, select"));
                        if (nextInputs[cellIndex]) target = nextInputs[cellIndex];
                    }
                    break;
                case "ArrowUp":
                    const prevRow = currentRow.previousElementSibling;
                    if (prevRow) {
                        const prevInputs = Array.from(prevRow.querySelectorAll("input, select"));
                        if (prevInputs[cellIndex]) target = prevInputs[cellIndex];
                    }
                    break;

                case "Delete":
                case "Del":
                    e.preventDefault();
                    if (allRows.length > 1) {
                        const nextFocusRow = currentRow.nextElementSibling || currentRow.previousElementSibling;
                        const nextFocusInput = nextFocusRow?.querySelector("input, select");

                        currentRow.remove();

                        if (nextFocusInput) nextFocusInput.focus();
                    }
                    break;
            }

            if (target) {
                e.preventDefault();
                target.focus();
            }
        });

        document.addEventListener("keydown", function (e) {
            // ذخیره با Ctrl + Enter
            if (e.ctrlKey && e.key === "Enter") {
                e.preventDefault();
                const saveBtn = document.querySelector(".btn-primary");
                if (saveBtn) saveBtn.click();
            }

            // باز یا بسته کردن راهنما با Shift + H
            else if (e.shiftKey && e.key.toLowerCase() === "h") {
                e.preventDefault();
                $('#helpModal').modal('toggle');
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            const firstInput = document.querySelector("#transactionsTable tbody tr:first-child input, #transactionsTable tbody tr:first-child select");
            if (firstInput) {
                firstInput.focus();
            }
        });
    </script>
}