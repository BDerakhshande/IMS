@model List<IMS.Areas.AccountManagement.Models.TransactionViewModel>
@using IMS.Areas.AccountManagement.Models

@{
    ViewData["Title"] = "مدیریت اسناد تراکنش‌ها";
    Layout = "~/Areas/AccountManagement/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-2" dir="rtl">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-file-invoice me-1" style="font-size: 0.85rem; margin-left: 0.5rem;"></i>
                        <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
                    </div>
                    <a href="@Url.Action("Create", "Transactions")"
                       class="btn btn-sm btn-light d-flex align-items-center py-1 px-2"
                       style="height: 28px; font-size: 0.8rem;">
                        <i class="fas fa-plus me-1" style="font-size: 0.8rem;"></i>
                        <span>افزودن سند</span>
                    </a>
                </div>

                <div class="card-body p-1">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show small" role="alert" style="font-size: 0.8rem;">
                            <i class="fas fa-check-circle me-1"></i>
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" style="font-size: 0.7rem;"></button>
                        </div>
                    }

                    <div class="table-responsive">
                        <table class="table table-hover table-sm mb-0" id="transactionsTable">
                            <thead style="background-color: #f8f9fa; font-size: 0.8rem;">
                                <tr>
                                    <th class="text-center py-1">شماره سند</th>
                                    <th class="text-center py-1">تاریخ</th>
                                    <th class="text-center py-1">شرح</th>
                                    <th class="text-center py-1">وضعیت</th>
                                    <th class="text-center py-1">نوع سند</th>
                                    <th class="text-center py-1">اصلاح‌کننده</th>
                                    <th class="text-center py-1">مبلغ</th>
                                    <th class="text-center py-1">عملیات</th>
                                </tr>
                            </thead>
                            <tbody style="font-size: 0.75rem;">
                                @foreach (var doc in Model)
                                {
                                    <tr style="cursor: pointer;" data-url="@Url.Action("Details", "Transactions", new { id = doc.Id })">
                                        <td class="text-center align-middle">@doc.DocumentNumber</td>
                                        <td class="text-center align-middle">@doc.PersianDate</td>
                                        <td class="text-center align-middle">@doc.Description</td>
                                        <td class="text-center align-middle fw-bold 
                                            @(doc.Status == Status.AwaitingApproval ? "text-primary" :
                                              doc.Status == Status.Confirmation ? "text-success" :
                                              doc.Status == Status.Reject ? "text-danger" : "")">
                                            @EnumHelper.GetDescription(doc.Status)
                                        </td>
                                        <td class="text-center align-middle">@doc.DocumentTypeName</td>
                                        <td class="text-center align-middle">@doc.ModifiedBy</td>
                                        <td class="text-center align-middle">@doc.TotalAmount.ToString("N0")</td>
                                        <td class="text-center align-middle">
                                            <div class="d-flex justify-content-center gap-1">
                                                @if (doc.Status == Status.AwaitingApproval)
                                                {
                                                    <form method="post" action="@Url.Action("Approve", "Transactions")" onsubmit="return confirm('آیا از تأیید این سند مطمئن هستید؟');">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@doc.Id" />
                                                        <button type="submit" class="btn btn-sm btn-outline-success px-1" style="font-size: 0.75rem;">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    </form>

                                                    <form method="post" action="@Url.Action("Reject", "Transactions")" onsubmit="return confirm('آیا از رد این سند مطمئن هستید؟');">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@doc.Id" />
                                                        <button type="submit" class="btn btn-sm btn-outline-warning px-1" style="font-size: 0.75rem;">
                                                            <i class="fas fa-ban"></i>
                                                        </button>
                                                    </form>
                                                }

                                                <form method="post" action="@Url.Action("Delete", "Transactions")" onsubmit="return confirm('آیا از حذف این سند مطمئن هستید؟');">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="id" value="@doc.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger px-1" style="font-size: 0.75rem;">
                                                        <i class="fas fa-trash-alt"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="d-flex justify-content-center mt-2">
                        <nav>
                            <ul class="pagination pagination-sm mb-0" id="paginationContainer"></ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/MenuJs.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const rows = document.querySelectorAll('tbody tr[data-url]');
            rows.forEach(row => {
                row.addEventListener('click', function (e) {
                    if (!e.target.closest('button, form, i')) {
                        const url = row.dataset.url;
                        if (url) window.location.href = url;
                    }
                });
            });

            // میانبرهای تایید، حذف و ...
            let selectedIndex = -1;
            const allRows = document.querySelectorAll('#transactionsTable tbody tr');

            function updateHighlight() {
                allRows.forEach((r, i) => r.classList.toggle('table-active', i === selectedIndex));
            }

            document.addEventListener('keydown', function (e) {
                const key = e.key.toLowerCase();
                if (e.altKey && e.shiftKey && key === 'n') window.location.href = '@Url.Action("Create", "Transactions")';
                if (e.altKey && e.shiftKey && key === 's') document.querySelector('[data-sort="DocumentNumber"]')?.click();
                if (e.altKey && e.shiftKey && key === 'd') document.querySelector('[data-sort="PersianDate"]')?.click();

                if (key === 'arrowdown' && selectedIndex < allRows.length - 1) {
                    selectedIndex++; updateHighlight();
                } else if (key === 'arrowup' && selectedIndex > 0) {
                    selectedIndex--; updateHighlight();
                } else if (key === 'enter' && selectedIndex >= 0) {
                    const url = allRows[selectedIndex].dataset.url;
                    if (url) window.location.href = url;
                }

                const row = allRows[selectedIndex];
                if (!row) return;

                if (e.shiftKey && !e.ctrlKey && !e.altKey) {
                    if (key === 'a') row.querySelector('form[action$="/Approve"]')?.submit();
                    if (key === 'r') row.querySelector('form[action$="/Reject"]')?.submit();
                    if (key === 'd') row.querySelector('form[action$="/Delete"]')?.submit();
                }
            });

            // صفحه‌بندی ساده
            const rowsPerPage = 10;
            let currentPage = 1;

            function paginate() {
                const totalPages = Math.ceil(allRows.length / rowsPerPage);
                allRows.forEach(r => r.style.display = 'none');
                allRows.forEach((r, i) => {
                    if (i >= (currentPage - 1) * rowsPerPage && i < currentPage * rowsPerPage) {
                        r.style.display = '';
                    }
                });

                const container = document.getElementById('paginationContainer');
                container.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.className = 'page-item' + (i === currentPage ? ' active' : '');
                    li.innerHTML = `<a class="page-link" href="#" style="font-size: 0.75rem;">${i}</a>`;
                    li.addEventListener('click', function (e) {
                        e.preventDefault();
                        currentPage = i;
                        paginate();
                    });
                    container.appendChild(li);
                }
            }

            paginate();
        });
    </script>
}
