@model IMS.Areas.AccountManagement.Models.TransactionDocumentDetailsViewModel
@using IMS.Areas.AccountManagement.Helper

@{
    ViewData["Title"] = "ایجاد سند";
    Layout = "~/Areas/AccountManagement/Views/Shared/_Layout.cshtml";
}

<style>
    .btn-outline-secondary {
        background-color: white !important;
    }

        .btn-outline-secondary:hover,
        .btn-outline-secondary:active,
        .btn-outline-secondary:focus {
            background-color: white !important;
            color: #6c757d !important;
            border-color: #6c757d !important;
            box-shadow: none !important;
        }

    .transaction-table {
        border-collapse: collapse;
        width: 100%;
        font-family: 'Vazirmatn', sans-serif;
        font-size: 0.875rem;
    }

        .transaction-table thead tr {
            background-color: #1a4959;
        }

        .transaction-table thead th {
            color: white;
            text-align: center;
            padding: 8px;
            font-weight: 500;
        }

        .transaction-table tbody td {
            padding: 6px 8px !important;
            vertical-align: middle;
            text-align: center;
            border-bottom: 1px solid #dee2e6;
        }

        .transaction-table tbody tr:hover {
            background-color: #f8f9fa;
        }

    .form-control-sm {
        font-size: 0.875rem;
        padding: 0.25rem 0.5rem;
    }

    .select2-container--bootstrap5 .select2-selection {
        font-size: 0.875rem;
        padding: 0.25rem 0.5rem;
        min-height: calc(1.5em + 0.5rem + 2px);
    }

    .btn-action {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .debit-input {
        color: #dc3545;
        font-weight: 500;
    }

    .credit-input {
        color: #28a745;
        font-weight: 500;
    }

    .search-btn {
        padding: 0.2rem 0.4rem;
        font-size: 0.75rem;
    }
</style>

<div class="header-sidebar-wrapper">
    <div class="container-fluid py-3" dir="rtl">
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow" style="box-shadow: var(--card-shadow); background-color: white;">
                    <div class="card-header py-2 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                        <h5 class="mb-0 text-white">
                            <i class="fas fa-plus-circle me-2"></i> @ViewData["Title"]
                        </h5>
                        <a asp-action="Index" class="btn btn-light btn-sm">
                            <i class="fas fa-arrow-right me-1"></i> بازگشت به لیست
                        </a>
                    </div>

                    <div class="card-body" style="background-color: white;">
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger small py-2 mb-3">
                                <i class="fas fa-exclamation-circle me-1"></i>
                                @foreach (var error in TempData["ErrorMessage"].ToString().Split("؛", StringSplitOptions.RemoveEmptyEntries))
                                {
                                    <div>@error</div>
                                }
                            </div>
                        }

                        <form asp-action="Create" method="post" id="createForm" novalidate class="needs-validation">
                            <div class="row g-2 mb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="DocumentNumber" class="form-label fw-bold mb-1 small">
                                            <i class="fas fa-hashtag me-1 text-muted"></i> شماره سند
                                        </label>
                                        <input asp-for="DocumentNumber" class="form-control form-control-sm" readonly />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label fw-bold mb-1 small">
                                            <i class="fas fa-calendar me-1 text-muted"></i> تاریخ
                                        </label>
                                        <input type="text" id="persianDocumentDate" class="form-control form-control-sm" placeholder="انتخاب تاریخ" required />
                                        <input type="hidden" name="PersianDocumentDate" id="PersianDocumentDate" />
                                        <span asp-validation-for="DocumentDate" class="text-danger small mt-1 d-block"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="SelectedDocumentTypeId" class="form-label fw-bold mb-1 small">
                                            <i class="fas fa-list me-1 text-muted"></i> نوع سند
                                        </label>
                                        <select asp-for="SelectedDocumentTypeId" class="form-control form-control-sm">
                                            <option value="">انتخاب نوع سند</option>
                                            @foreach (var item in Model.DocumentTypes)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                        <span asp-validation-for="SelectedDocumentTypeId" class="text-danger small mt-1 d-block"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Description" class="form-label fw-bold mb-1 small">
                                    <i class="fas fa-align-left me-1 text-muted"></i> شرح سند
                                </label>
                                <textarea asp-for="Description" class="form-control form-control-sm" rows="2"></textarea>
                            </div>

                            <h6 class="fw-bold mb-2" style="color: #1a4959;">
                                <i class="fas fa-exchange-alt me-2"></i> تراکنش‌ها
                            </h6>

                            <div class="table-responsive mb-3">
                                <table class="table transaction-table" id="transactionsTable">
                                    <thead>
                                        <tr>
                                            <th>جستجو</th>
                                            <th style="width: 5%;">ردیف</th>
                                            <th>حساب کل</th>
                                            <th>حساب معین</th>
                                            <th>تفصیل</th>
                                            <th>تفصیل ۲</th>
                                            <th>بدهکار</th>
                                            <th>بستانکار</th>
                                            <th>شرح</th>
                                            <th>عملیات</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Transactions?.Any() == true)
                                        {
                                            @for (int i = 0; i < Model.Transactions.Count; i++)
                                            {
                                                <tr>
                                                    <td>
                                                        <button type="button" class="btn btn-outline-primary btn-sm search-btn open-search-modal">
                                                            <i class="fas fa-search"></i>
                                                        </button>
                                                    </td>
                                                    <td>@(i + 1)</td>
                                                    <td>
                                                        <select name="Transactions[@i].MainAccountId" class="form-control form-control-sm main-account" data-index="@i">
                                                            <option value="">انتخاب حساب کل</option>
                                                            @foreach (var item in Model.MainAccounts)
                                                            {
                                                                <option value="@item.Value" selected="@(item.Value == Model.Transactions[i].MainAccountId?.ToString() ? "selected" : null)">@item.Text</option>
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <select name="Transactions[@i].SubAccountId" class="form-control form-control-sm sub-account" data-index="@i" disabled>
                                                            <option value="">انتخاب حساب معین</option>
                                                            @{
                                                                var mainAccountId = Model.Transactions[i].MainAccountId;
                                                                if (mainAccountId.HasValue && Model.SubAccounts.ContainsKey(mainAccountId.Value))
                                                                {
                                                                    foreach (var subItem in Model.SubAccounts[mainAccountId.Value])
                                                                    {
                                                                        <option value="@subItem.Value" selected="@(subItem.Value == Model.Transactions[i].SubAccountId?.ToString() ? "selected" : null)">@subItem.Text</option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <select name="Transactions[@i].DetailAccount1Id" class="form-control form-control-sm detail-account1" data-index="@i" disabled>
                                                            <option value="">انتخاب تفصیل</option>
                                                            @{
                                                                var subAccountId = Model.Transactions[i].SubAccountId;
                                                                if (subAccountId.HasValue && Model.DetailAccounts1.ContainsKey(subAccountId.Value))
                                                                {
                                                                    foreach (var detailItem in Model.DetailAccounts1[subAccountId.Value])
                                                                    {
                                                                        <option value="@detailItem.Value" selected="@(detailItem.Value == Model.Transactions[i].DetailAccount1Id?.ToString() ? "selected" : null)">@detailItem.Text</option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                    </td>
                                                    <td>
                                                        <select name="Transactions[@i].DetailAccount2Id" class="form-control form-control-sm detail-account2" data-index="@i" disabled>
                                                            <option value="">انتخاب تفصیل ۲</option>
                                                            @{
                                                                var detailAccount1Id = Model.Transactions[i].DetailAccount1Id;
                                                                if (detailAccount1Id.HasValue && Model.DetailAccounts2.ContainsKey(detailAccount1Id.Value))
                                                                {
                                                                    foreach (var detail2Item in Model.DetailAccounts2[detailAccount1Id.Value])
                                                                    {
                                                                        <option value="@detail2Item.Value" selected="@(detail2Item.Value == Model.Transactions[i].DetailAccount2Id?.ToString() ? "selected" : null)">@detail2Item.Text</option>
                                                                    }
                                                                }
                                                            }
                                                        </select>
                                                    </td>
                                                    <td><input name="Transactions[@i].Debit" value="@Model.Transactions[i].Debit" type="number" class="form-control form-control-sm debit-input" step="0.01" /></td>
                                                    <td><input name="Transactions[@i].Credit" value="@Model.Transactions[i].Credit" type="number" class="form-control form-control-sm credit-input" step="0.01" /></td>
                                                    <td><input name="Transactions[@i].DescriptionTran" value="@Model.Transactions[i].DescriptionTran" class="form-control form-control-sm" maxlength="500" /></td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger btn-sm btn-action">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td>
                                                    <button type="button" class="btn btn-outline-primary btn-sm search-btn open-search-modal">
                                                        <i class="fas fa-search"></i>
                                                    </button>
                                                </td>
                                                <td>1</td>
                                                <td>
                                                    <select name="Transactions[0].MainAccountId" class="form-control form-control-sm main-account" data-index="0">
                                                        <option value="">انتخاب حساب کل</option>
                                                        @foreach (var item in Model.MainAccounts)
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <select name="Transactions[0].SubAccountId" class="form-control form-control-sm sub-account" data-index="0" disabled>
                                                        <option value="">انتخاب حساب معین</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select name="Transactions[0].DetailAccount1Id" class="form-control form-control-sm detail-account1" data-index="0" disabled>
                                                        <option value="">انتخاب تفصیل</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select name="Transactions[0].DetailAccount2Id" class="form-control form-control-sm detail-account2" data-index="0" disabled>
                                                        <option value="">انتخاب تفصیل ۲</option>
                                                    </select>
                                                </td>
                                                <td><input name="Transactions[0].Debit" type="number" class="form-control form-control-sm debit-input" step="0.01" value="0" /></td>
                                                <td><input name="Transactions[0].Credit" type="number" class="form-control form-control-sm credit-input" step="0.01" value="0" /></td>
                                                <td><input name="Transactions[0].DescriptionTran" class="form-control form-control-sm" maxlength="500" /></td>
                                                <td>
                                                    <button type="button" class="btn btn-danger btn-sm btn-action">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="mb-3">
                                <button type="button" class="btn btn-primary btn-sm" onclick="addRow()">
                                    <i class="fas fa-plus-circle me-1"></i> افزودن تراکنش
                                </button>
                            </div>

                            <div class="form-footer border-top pt-3 mt-3 d-flex justify-content-end gap-2">
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-save me-1"></i> ذخیره
                                </button>
                                <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-times me-1"></i> انصراف
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="searchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="searchModalLabel">
                    <i class="fas fa-search me-2"></i> جستجوی تفصیل ۲
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="نام یا کد تفصیل ۲ را وارد کنید" />
                </div>
                <div id="searchResults" class="table-responsive mt-3" style="display:none;">
                    <table class="table table-sm table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th>کل</th>
                                <th>معین</th>
                                <th>تفصیل ۱</th>
                                <th>تفصیل ۲</th>
                            </tr>
                        </thead>
                        <tbody id="tafzil2ResultsBody"></tbody>
                    </table>
                </div>
                <div id="noResults" class="text-danger text-center mt-3 small" style="display: none;">
                    <i class="fas fa-exclamation-circle me-1"></i> نتیجه‌ای یافت نشد!
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Help Modal -->
<div id="helpModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="fas fa-question-circle me-2"></i> راهنما
                </h5>
                <button type="button" class="btn-close btn-close-white" onclick="closeHelp()"></button>
            </div>
            <div class="modal-body">
                <ul class="list-unstyled">
                    <li class="mb-2"><kbd>↑</kbd> و <kbd>↓</kbd> → حرکت بین سطرها</li>
                    <li class="mb-2"><kbd>Delete</kbd> → حذف تراکنش</li>
                    <li class="mb-2"><kbd>Shift + S</kbd> → جستجوی تفصیل</li>
                    <li class="mb-2"><kbd>Ctrl + Enter</kbd> → ذخیره سند</li>
                    <li class="mb-2"><kbd>Enter</kbd> → افزودن ردیف جدید</li>
                    <li class="mb-2"><kbd>Shift + H</kbd> → نمایش/بستن راهنما</li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-sm" onclick="closeHelp()">
                    <i class="fas fa-check me-1"></i> فهمیدم
                </button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/MenuJs.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>

    <script>
        $(document).ready(function () {
            // تنظیم تاریخ امروز
            var now = new Date();
            var persianDate = now.toLocaleDateString('fa-IR-u-nu-latn');
            $('#persianDocumentDate').val(persianDate);
            $('#PersianDocumentDate').val(persianDate);

            // مدیریت ارسال فرم
            $('form').on('submit', function () {
                $('#PersianDocumentDate').val($('#persianDocumentDate').val());
            });

            // تعریف متغیرهای全局
            var subAccounts = @Html.Raw(Json.Serialize(Model.SubAccounts));
            var detailAccounts1 = @Html.Raw(Json.Serialize(Model.DetailAccounts1));
            var detailAccounts2 = @Html.Raw(Json.Serialize(Model.DetailAccounts2));
            let rowIndex = @Model.Transactions.Count;
            let currentRowIndex = -1;
            let currentResults = [];
            let selectedIndex = -1;

            // مقداردهی اولیه
            initializeAccountSelectionHandlers();
            attachRowEventHandlers();
            initializeKeyboardNavigation();

            // توابع اصلی
            function initializeAccountSelectionHandlers() {
                $('#transactionsTable').off('change', '.main-account').on('change', '.main-account', function () {
                    const mainAccountId = $(this).val();
                    loadSubAccounts($(this).closest('tr'), mainAccountId);
                });

                $('#transactionsTable').off('change', '.sub-account').on('change', '.sub-account', function () {
                    const subAccountId = $(this).val();
                    loadDetailAccounts($(this).closest('tr'), subAccountId);
                });

                $('#transactionsTable').off('change', '.detail-account1').on('change', '.detail-account1', function () {
                    const detailAccount1Id = $(this).val();
                    loadDetailAccounts2($(this).closest('tr'), detailAccount1Id);
                });
            }

            function attachRowEventHandlers() {
                // حذف ردیف
                $('#transactionsTable').on('click', '.delete-row, .btn-danger', function() {
                    const row = $(this).closest('tr');
                    if ($('#transactionsTable tbody tr').length > 1) {
                        row.remove();
                        updateRowIndices();
                    } else {
                        alert('حداقل یک ردیف باید وجود داشته باشد');
                    }
                });

                // باز کردن مودال جستجو
                $('#transactionsTable').on('click', '.open-search-modal', function() {
                    currentRowIndex = $(this).closest('tr').index();
                    $('#searchInput').val('');
                    $('#tafzil2ResultsBody').empty();
                    $('#searchResults, #noResults').hide();
                    $('#searchModal').modal('show');
                    setTimeout(() => $('#searchInput').focus(), 200);
                });
            }

            function initializeKeyboardNavigation() {
                // مدیریت رویدادهای صفحه کلید
                $(document).on('keydown', function(e) {
                    // ذخیره با Ctrl + Enter
                    if (e.ctrlKey && e.key === "Enter") {
                        e.preventDefault();
                        $('form').submit();
                    }
                    // نمایش راهنما با Shift + H
                    else if (e.shiftKey && e.key.toLowerCase() === "h") {
                        e.preventDefault();
                        $('#helpModal').modal('toggle');
                    }
                    // جستجو با Shift + S
                    else if (e.shiftKey && e.key === "KeyS") {
                        e.preventDefault();
                        if (currentRowIndex < 0) return;
                        $('#searchModal').modal('show');
                        $('#searchInput').focus();
                    }
                    // اضافه کردن ردیف با Enter
                    else if (e.key === "Enter" && $(e.target).is('input, select')) {
                        e.preventDefault();
                        addRow();
                    }
                });

                // ناوبری در مودال جستجو
                $('#searchModal').on('keydown', function(e) {
                    const rows = $('#tafzil2ResultsBody tr');
                    if (!rows.length) return;

                    switch (e.key) {
                        case 'ArrowDown':
                            e.preventDefault();
                            selectedIndex = Math.min(selectedIndex + 1, rows.length - 1);
                            highlightRow(rows);
                            break;
                        case 'ArrowUp':
                            e.preventDefault();
                            selectedIndex = Math.max(selectedIndex - 1, 0);
                            highlightRow(rows);
                            break;
                        case 'Enter':
                            e.preventDefault();
                            selectCurrentResult();
                            break;
                    }
                });

                // انتخاب نتیجه با کلیک
                $('#tafzil2ResultsBody').on('click', 'tr', function() {
                    selectedIndex = $(this).index();
                    selectCurrentResult();
                });
            }

            // توابع کمکی
            function loadSubAccounts($row, mainAccountId) {
                const $subAccountSelect = $row.find('.sub-account');
                const prevSubAccountId = $subAccountSelect.val();

                $subAccountSelect.empty().append('<option value="">انتخاب حساب معین</option>');
                $row.find('.detail-account1, .detail-account2').empty().append('<option value="">انتخاب تفصیل</option>').prop('disabled', true);

                if (!mainAccountId) {
                    $subAccountSelect.prop('disabled', true);
                    return;
                }

                const stringMainAccountId = String(mainAccountId);
                const subAccountData = subAccounts[stringMainAccountId];

                if (subAccountData && subAccountData.length > 0) {
                    subAccountData.forEach(function(item) {
                        const value = item.Value || item.value || item.Id || '';
                        const text = item.Text || item.text || item.Name || 'Unknown';
                        $subAccountSelect.append(`<option value="${value}">${text}</option>`);
                    });
                    $subAccountSelect.prop('disabled', false);

                    if (prevSubAccountId && subAccountData.some(x => (x.Value || x.value || x.Id) == prevSubAccountId)) {
                        $subAccountSelect.val(prevSubAccountId).trigger('change');
                    }
                } else {
                    $subAccountSelect.prop('disabled', true);
                }
            }

            function loadDetailAccounts($row, subAccountId) {
                const $detailAccount1Select = $row.find('.detail-account1');
                const prevDetailAccount1Id = $detailAccount1Select.val();

                $detailAccount1Select.empty().append('<option value="">انتخاب تفصیل</option>');
                $row.find('.detail-account2').empty().append('<option value="">انتخاب تفصیل ۲</option>').prop('disabled', true);

                if (!subAccountId) {
                    $detailAccount1Select.prop('disabled', true);
                    return;
                }

                const stringSubAccountId = String(subAccountId);
                const detailAccountData = detailAccounts1[stringSubAccountId];

                if (detailAccountData && detailAccountData.length > 0) {
                    detailAccountData.forEach(function(item) {
                        const value = item.Value || item.value || item.Id || '';
                        const text = item.Text || item.text || item.Name || 'Unknown';
                        $detailAccount1Select.append(`<option value="${value}">${text}</option>`);
                    });
                    $detailAccount1Select.prop('disabled', false);

                    if (prevDetailAccount1Id && detailAccountData.some(x => (x.Value || x.value || x.Id) == prevDetailAccount1Id)) {
                        $detailAccount1Select.val(prevDetailAccount1Id).trigger('change');
                    }
                } else {
                    $detailAccount1Select.prop('disabled', true);
                }
            }

            function loadDetailAccounts2($row, detailAccount1Id) {
                const $detailAccount2Select = $row.find('.detail-account2');
                $detailAccount2Select.empty().append('<option value="">انتخاب تفصیل ۲</option>');

                if (!detailAccount1Id) {
                    $detailAccount2Select.prop('disabled', true);
                    return;
                }

                const stringDetailAccount1Id = String(detailAccount1Id);
                const detailAccount2Data = detailAccounts2[stringDetailAccount1Id];

                if (detailAccount2Data && detailAccount2Data.length > 0) {
                    detailAccount2Data.forEach(function(item) {
                        const value = item.Value || item.value || item.Id || '';
                        const text = item.Text || item.text || item.Name || 'Unknown';
                        $detailAccount2Select.append(`<option value="${value}">${text}</option>`);
                    });
                    $detailAccount2Select.prop('disabled', false);
                } else {
                    $detailAccount2Select.prop('disabled', true);
                }
            }

            window.addRow = function () {
                try {
                    const tbody = document.querySelector('#transactionsTable tbody');
                    const rowCount = tbody.querySelectorAll('tr').length;

                    const newRow = document.createElement('tr');
                    newRow.innerHTML = `
                        <td>
                            <button type="button" class="btn btn-outline-primary btn-sm search-btn open-search-modal">
                                <i class="fas fa-search"></i>
                            </button>
                        </td>
                        <td>${rowCount + 1}</td>
                        <td>
                            <select name="Transactions[${rowCount}].MainAccountId"
                                    class="form-control form-control-sm main-account"
                                    data-index="${rowCount}">
                                <option value="">انتخاب حساب کل</option>
                                @foreach (var item in Model.MainAccounts)
                                {
                                        <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].SubAccountId"
                                    class="form-control form-control-sm sub-account"
                                    data-index="${rowCount}" disabled>
                                <option value="">انتخاب حساب معین</option>
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].DetailAccount1Id"
                                    class="form-control form-control-sm detail-account1"
                                    data-index="${rowCount}" disabled>
                                <option value="">انتخاب تفصیل</option>
                            </select>
                        </td>
                        <td>
                            <select name="Transactions[${rowCount}].DetailAccount2Id"
                                    class="form-control form-control-sm detail-account2"
                                    data-index="${rowCount}" disabled>
                                <option value="">انتخاب تفصیل ۲</option>
                            </select>
                        </td>
                        <td>
                            <input name="Transactions[${rowCount}].Debit"
                                   type="number"
                                   class="form-control form-control-sm debit-input"
                                   step="0.01"
                                   value="0" />
                        </td>
                        <td>
                            <input name="Transactions[${rowCount}].Credit"
                                   type="number"
                                   class="form-control form-control-sm credit-input"
                                   step="0.01"
                                   value="0" />
                        </td>
                        <td>
                            <input name="Transactions[${rowCount}].DescriptionTran"
                                   class="form-control form-control-sm"
                                   maxlength="500" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm btn-action delete-row">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    `;

                    // اضافه کردن ردیف جدید به جدول
                    tbody.appendChild(newRow);

                    // اتصال رویدادها به عناصر جدید
                    setupRowEvents(newRow);

                    // به‌روزرسانی شماره ردیف‌ها
                    updateRowIndices();

                    // فوکوس روی فیلد حساب کل
                    setTimeout(() => {
                        newRow.querySelector('.main-account').focus();
                    }, 100);
                } catch (error) {
                    console.error('Error in addRow:', error);
                    alert('خطا در افزودن ردیف جدید');
                }
            }

        function setupRowEvents(row) {
            // رویداد حذف ردیف
            row.querySelector('.delete-row').addEventListener('click', function() {
                const tbody = document.querySelector('#transactionsTable tbody');
                if (tbody.querySelectorAll('tr').length > 1) {
                    row.remove();
                    updateRowIndices();
                } else {
                    alert('حداقل یک ردیف باید وجود داشته باشد');
                }
            });

            // رویداد جستجو
            row.querySelector('.open-search-modal').addEventListener('click', function() {
                currentRowIndex = Array.from(row.parentNode.children).indexOf(row);
                $('#searchModal').modal('show');
                $('#searchInput').focus();
            });

            // رویداد تغییر حساب کل
            row.querySelector('.main-account').addEventListener('change', function() {
                const mainAccountId = this.value;
                loadSubAccounts(row, mainAccountId);
            });
        }

        function updateRowIndices() {
            const rows = document.querySelectorAll('#transactionsTable tbody tr');
            rows.forEach((row, index) => {
                // به‌روزرسانی شماره ردیف
                row.cells[1].textContent = index + 1;

                // به‌روزرسانی نام و data-index فیلدها
                const inputs = row.querySelectorAll('input, select');
                inputs.forEach(input => {
                    const name = input.name;
                    if (name && name.includes('Transactions')) {
                        input.name = name.replace(/Transactions\[\d+\]/, `Transactions[${index}]`);
                        input.dataset.index = index;
                    }
                });
            });
        }

            // توابع مربوط به جستجو
            $('#searchInput').on('input', debounce(function() {
                const term = $(this).val().trim();
                if (!term) {
                    $('#searchResults, #noResults').hide();
                    return;
                }

                $.getJSON('/AccountManagement/Transactions/SearchTafzil2', { searchTerm: term })
                    .done(function(data) {
                        renderRows(data);
                    })
                    .fail(function() {
                        $('#searchResults').hide();
                        $('#noResults').show();
                    });
            }, 300));

            function renderRows(data) {
                currentResults = data;
                selectedIndex = -1;

                if (data.length === 0) {
                    $('#searchResults').hide();
                    $('#noResults').show();
                    return;
                }

                const html = data.map((item, idx) => `
                    <tr data-index="${idx}">
                        <td>${item.kolCode} - ${item.kolName}</td>
                        <td>${item.moienCode} - ${item.moienName}</td>
                        <td>${item.tafzil1Code} - ${item.tafzil1Name}</td>
                        <td>${item.tafzil2Code} - ${item.tafzil2Name}</td>
                    </tr>`).join('');

                $('#tafzil2ResultsBody').html(html);
                $('#searchResults').show();
                $('#noResults').hide();
            }

            function highlightRow(rows) {
                rows.removeClass('table-active').css('background-color', '');
                if (selectedIndex >= 0) {
                    $(rows[selectedIndex]).addClass('table-active').css('background-color', '#d0ebff');
                }
            }

            function selectCurrentResult() {
                const item = currentResults?.[selectedIndex];
                if (!item || currentRowIndex < 0) return;

                const $row = $('#transactionsTable tbody tr').eq(currentRowIndex);
                if (!$row.length) return;

                // تنظیم مقادیر در ردیف
                setSelectValue($row.find('.main-account'), item.kolCode, item.kolName);
                setSelectValue($row.find('.sub-account'), item.moienCode, item.moienName);
                setSelectValue($row.find('.detail-account1'), item.tafzil1Code, item.tafzil1Name);
                setSelectValue($row.find('.detail-account2'), item.tafzil2Id, `${item.tafzil2Code} - ${item.tafzil2Name}`);

                $('#searchModal').modal('hide');
            }

            function setSelectValue($select, value, text) {
                if (!$select.find(`option[value="${value}"]`).length) {
                    $select.append(`<option value="${value}">${text}</option>`);
                }
                $select.val(value).trigger('change');
            }

            function debounce(fn, delay) {
                let timeout;
                return function(...args) {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => fn.apply(this, args), delay);
                };
            }

            function closeHelp() {
                $('#helpModal').modal('hide');
            }

            // فوکوس روی اولین فیلد
            $('#transactionsTable tbody tr:first input, #transactionsTable tbody tr:first select').first().focus();
        });
    </script>
}