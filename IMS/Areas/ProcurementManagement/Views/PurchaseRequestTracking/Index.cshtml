@using System.Reflection
@using System.ComponentModel
@model List<IMS.Application.ProcurementManagement.DTOs.PurchaseRequestDto>
@{
    ViewData["Title"] = "لیست درخواست‌های خرید";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-2" dir="rtl">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-shopping-cart me-1" style="font-size: 0.85rem;"></i>
                        <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
                    </div>

                    <div class="d-flex align-items-center gap-1">
                        <div class="search-box" style="width: 180px;">
                            <div class="input-group input-group-sm">
                                <span class="input-group-text bg-white text-secondary p-1">
                                    <i class="fas fa-search" style="font-size: 0.8rem;"></i>
                                </span>
                                <input type="text"
                                       id="globalSearch"
                                       class="form-control form-control-sm p-1"
                                       placeholder="جستجو..."
                                       dir="rtl"
                                       style="height: 28px; font-size: 0.8rem;">
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body p-1">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-info rounded-3 text-center py-2" style="font-size: 0.8rem;">
                            <i class="fas fa-info-circle mb-1" style="font-size: 0.85rem;"></i>
                            <h6 class="fw-bold mb-1" style="font-size: 0.85rem;">درخواستی یافت نشد</h6>
                            <p class="mb-0" style="font-size: 0.8rem;">برای ایجاد درخواست جدید روی دکمه "افزودن" کلیک کنید</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-sm mb-0">
                                <thead style="background-color: #f8f9fa; font-size: 0.82rem;">
                                    <tr>
                                        <th class="text-center py-1">شماره درخواست</th>
                                        <th class="text-center py-1">تاریخ درخواست</th>
                                        <th class="text-center py-1">عنوان</th>
                                        <th class="text-center py-1">وضعیت</th>
                                        <th class="text-center py-1">تعداد آیتم‌ها</th>
                                        <th class="text-center py-1">عملیات</th>
                                    </tr>
                                </thead>
                                <tbody style="font-size: 0.8rem;">
                                    @foreach (var pr in Model)
                                    {
                                        <tr>
                                            <td class="text-center fw-bold py-1 align-middle">@pr.RequestNumber</td>
                                            <td class="text-center py-1 align-middle">@pr.RequestDate.ToString("yyyy/MM/dd")</td>
                                            <td class="text-center py-1 align-middle">@pr.Title</td>
                                            <td class="text-center py-1 align-middle">
                                                @{
                                                    var description = pr.Status.GetType()
                                                    .GetField(pr.Status.ToString())
                                                    .GetCustomAttribute<DescriptionAttribute>()?
                                                    .Description ?? pr.Status.ToString();
                                                }
                                                @description
                                            </td>
                                            <td class="text-center py-1 align-middle">@pr.Items.Count()</td>
                                            <td class="text-center py-1 align-middle">
                                                <a href="@Url.Action("Details", "PurchaseRequestTracking", new { purchaseRequestId = pr.Id })"
                                                   class="btn btn-outline-primary btn-sm px-2"
                                                   style="font-size: 0.75rem; height: 26px;">
                                                    <i class="fas fa-eye me-1"></i> مشاهده وضعیت
                                                </a>

                                            </td>
                                        </tr>

                                        <tr id="items-@pr.Id" style="display:none;">
                                            <td colspan="6">
                                                <div id="items-container-@pr.Id">
                                                    <em class="text-muted small">برای مشاهده آیتم‌ها روی دکمه کلیک کنید</em>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>

                <div class="card-footer bg-light py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="text-muted small" style="font-size: 0.8rem;" id="countInfo">
                            <i class="fas fa-info-circle me-1" style="font-size: 0.85rem;"></i>
                            تعداد درخواست‌ها: @Model.Count
                        </div>
                        <div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination pagination-sm mb-0" id="paginationWrapper">
                                    <li class="page-item disabled" id="prevBtn">
                                        <a class="page-link" href="#" tabindex="-1">قبلی</a>
                                    </li>
                                    <li class="page-item" id="nextBtn">
                                        <a class="page-link" href="#">بعدی</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // پیاده‌سازی صفحه‌بندی و جستجو
            const rowsPerPage = 10;
            const table = document.querySelector('table');
            if (!table) return;

            const allRows = Array.from(table.querySelectorAll('tbody tr:not([id^="items-"])'));
            let filteredRows = allRows;
            let currentPage = 1;

            // توابع کمکی
            function updateTableDisplay() {
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                allRows.forEach(row => row.style.display = 'none');
                filteredRows.slice(start, end).forEach(row => {
                    row.style.display = '';
                });

                updateCountInfo();
                updatePaginationControls();
            }

            function updateCountInfo() {
                const countElement = document.getElementById('countInfo');
                if (countElement) {
                    countElement.innerHTML = `
                        <i class="fas fa-info-circle me-1"></i>
                        تعداد درخواست‌ها: ${filteredRows.length} ${filteredRows.length !== allRows.length ? `(از ${allRows.length})` : ''}
                    `;
                }
            }

            function updatePaginationControls() {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                const prevBtn = document.getElementById('prevBtn');
                const nextBtn = document.getElementById('nextBtn');

                prevBtn.classList.toggle('disabled', currentPage === 1);
                nextBtn.classList.toggle('disabled', currentPage === pageCount || pageCount === 0);
            }

            function setupPagination() {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                const paginationWrapper = document.getElementById('paginationWrapper');
                const nextBtn = document.getElementById('nextBtn');

                // حذف صفحات قبلی
                document.querySelectorAll('#paginationWrapper .page-number').forEach(el => el.remove());

                // اضافه کردن صفحات جدید
                for (let i = 1; i <= pageCount; i++) {
                    const li = document.createElement('li');
                    li.className = `page-item page-number ${i === currentPage ? 'active' : ''}`;
                    li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                    li.addEventListener('click', (e) => {
                        e.preventDefault();
                        goToPage(i);
                    });
                    paginationWrapper.insertBefore(li, nextBtn);
                }
            }

            function goToPage(page) {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                if (page < 1 || page > pageCount) return;
                currentPage = page;
                updateTableDisplay();
            }

            // رویدادهای صفحه‌بندی
            document.getElementById('prevBtn').addEventListener('click', (e) => {
                e.preventDefault();
                goToPage(currentPage - 1);
            });

            document.getElementById('nextBtn').addEventListener('click', (e) => {
                e.preventDefault();
                goToPage(currentPage + 1);
            });

            // پیاده‌سازی جستجو
            document.getElementById('globalSearch').addEventListener('input', function() {
                const searchTerm = this.value.trim().toLowerCase();

                filteredRows = allRows.filter(row => {
                    const cells = row.querySelectorAll('td:not(:last-child)');
                    return Array.from(cells).some(cell =>
                        cell.textContent.toLowerCase().includes(searchTerm)
                });

                currentPage = 1;
                updateTableDisplay();
                setupPagination();
            });

            // مقداردهی اولیه
            setupPagination();
            updateTableDisplay();
        });

        function toggleItems(id) {
            var row = document.getElementById('items-' + id);
            if (row.style.display === 'none') {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        }
    </script>
}