@using IMS.Application.ProcurementManagement.DTOs
@using System.Reflection
@using System.ComponentModel
@model List<IMS.Application.ProcurementManagement.DTOs.PurchaseRequestDto>

@{
    ViewData["Title"] = "لیست درخواست‌های کالا";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid py-2" dir="rtl">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header py-1 d-flex justify-content-between align-items-center" style="background-color: #1a4959; color: white;">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-shopping-cart me-1" style="font-size: 0.85rem;"></i>
                        <h5 class="mb-0 fw-bold" style="font-size: 0.9rem;">@ViewData["Title"]</h5>
                    </div>

                    <div class="d-flex align-items-center gap-1">
                        <div class="search-box" style="width: 180px;">
                            <div class="input-group input-group-sm">
                                <span class="input-group-text bg-white text-secondary p-1">
                                    <i class="fas fa-search" style="font-size: 0.8rem;"></i>
                                </span>
                                <input type="text"
                                       id="globalSearch"
                                       class="form-control form-control-sm p-1"
                                       placeholder="جستجو..."
                                       dir="rtl"
                                       style="height: 28px; font-size: 0.8rem;">
                            </div>
                        </div>

                        <a asp-action="Create"
                           class="btn btn-sm btn-light d-flex align-items-center py-1 px-2"
                           style="height: 28px; font-size: 0.8rem;">
                            <i class="fas fa-plus me-1" style="font-size: 0.8rem;"></i>
                            <span>درخواست جدید</span>
                        </a>
                    </div>
                </div>

                <div class="card-body p-1">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-info rounded-3 text-center py-2" style="font-size: 0.8rem;">
                            <i class="fas fa-info-circle mb-1" style="font-size: 0.85rem;"></i>
                            <h6 class="fw-bold mb-1" style="font-size: 0.85rem;">درخواستی یافت نشد</h6>
                            <p class="mb-0" style="font-size: 0.8rem;">برای ایجاد درخواست جدید روی دکمه "افزودن" کلیک کنید</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-sm mb-0">
                                <thead style="background-color: #f8f9fa; font-size: 0.82rem;">
                                    <tr>
                                        <th class="text-center py-1">شماره درخواست</th>
                                        <th class="text-center py-1">تاریخ درخواست</th>
                                        <th class="text-center py-1">نوع درخواست</th>
                                        <th class="text-center py-1">عنوان</th>
                                        <th class="text-center py-1">تعداد آیتم‌ها</th>
                                        <th class="text-center py-1">وضعیت</th>
                                        <th class="text-center py-1">عملیات</th>
                                    </tr>
                                </thead>
                                <tbody style="font-size: 0.8rem;">
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td class="text-center fw-bold py-1 align-middle">@item.RequestNumber</td>
                                            <td class="text-center py-1 align-middle">@item.RequestDate.ToString("yyyy/MM/dd")</td> 
                                            <td class="text-center py-1 align-middle">@item.RequestTypeName</td> 
                                            <td class="text-center py-1 align-middle">@item.Title</td>
                                            <td class="text-center py-1 align-middle">@item.Items.Count</td>
                                            <td class="text-center py-1 align-middle">
                                                @{
                                                    var description = item.Status.GetType()
                                                    .GetField(item.Status.ToString())
                                                    .GetCustomAttribute<DescriptionAttribute>()?
                                                    .Description ?? item.Status.ToString();
                                                }
                                                @description
                                            </td>

                                            <td class="text-center py-1 align-middle">
                                                <div class="d-flex justify-content-center gap-1">
                                                    <a asp-action="Edit"
                                                       asp-route-id="@item.Id"
                                                       class="btn btn-sm btn-outline-warning px-1"
                                                       style="font-size: 0.75rem; min-width: 26px; height: 26px;"
                                                       title="ویرایش">
                                                        <i class="fas fa-edit"></i>
                                                    </a>

                                                    <form asp-action="Delete" method="post" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@item.Id" />
                                                        <button type="submit"
                                                                class="btn btn-sm btn-outline-danger px-1"
                                                                style="font-size: 0.75rem; min-width: 26px; height: 26px;"
                                                                title="حذف"
                                                                onclick="return confirm('آیا از حذف این درخواست مطمئن هستید؟');">
                                                            <i class="fas fa-trash-alt"></i>
                                                        </button>
                                                    </form>

                                           
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>

                <div class="card-footer bg-light py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="text-muted small" style="font-size: 0.8rem;" id="countInfo">
                            <i class="fas fa-info-circle me-1" style="font-size: 0.85rem;"></i>
                            تعداد درخواست‌ها: @Model.Count
                        </div>
                        <div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination pagination-sm mb-0" id="paginationWrapper">
                                    <li class="page-item disabled" id="prevBtn">
                                        <a class="page-link" href="#" tabindex="-1">قبلی</a>
                                    </li>
                                    <li class="page-item" id="nextBtn">
                                        <a class="page-link" href="#">بعدی</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const rowsPerPage = 10;
            const table = document.querySelector('table');
            if (!table) return;

            const tbody = table.querySelector('tbody');
            let allRows = Array.from(tbody.querySelectorAll('tr'));
            let filteredRows = [...allRows];
            let currentPage = 1;

            // --- تابع جدید برای مرتب‌سازی descending بر اساس تاریخ (سلول دوم: yyyy/MM/dd) ---
            function sortRowsByDateDescending(rows) {
                return rows.sort((a, b) => {
                    const dateA = a.querySelectorAll('td')[1].textContent.trim(); // سلول تاریخ
                    const dateB = b.querySelectorAll('td')[1].textContent.trim();
                    // تبدیل yyyy/MM/dd به فرمت قابل مقایسه (مثل Date)
                    const [yearA, monthA, dayA] = dateA.split('/').map(Number);
                    const [yearB, monthB, dayB] = dateB.split('/').map(Number);
                    const timeA = new Date(yearA, monthA - 1, dayA).getTime();
                    const timeB = new Date(yearB, monthB - 1, dayB).getTime();
                    return timeB - timeA; // descending: جدیدتر بالاتر
                });
            }

            // --- اعمال مرتب‌سازی اولیه ---
            allRows = sortRowsByDateDescending(allRows);
            filteredRows = [...allRows];
            // رندر مجدد tbody با ترتیب جدید
            tbody.innerHTML = '';
            allRows.forEach(row => tbody.appendChild(row));

            // --- نمایش جدول با صفحه‌بندی ---
            function updateTableDisplay() {
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                allRows.forEach(row => row.style.display = 'none');
                filteredRows.slice(start, end).forEach(row => row.style.display = '');

                updateCountInfo();
                updatePaginationControls();
                highlightActivePage();
            }

            // --- شمارنده ---
            function updateCountInfo() {
                const countElement = document.getElementById('countInfo');
                if (countElement) {
                    countElement.innerHTML = `
                        <i class="fas fa-info-circle me-1"></i>
                        تعداد درخواست‌ها: ${filteredRows.length} ${filteredRows.length !== allRows.length ? `(از ${allRows.length})` : ''}
                    `;
                }
            }

            // --- کنترل‌های قبلی/بعدی ---
            function updatePaginationControls() {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                document.getElementById('prevBtn').classList.toggle('disabled', currentPage === 1);
                document.getElementById('nextBtn').classList.toggle('disabled', currentPage === pageCount || pageCount === 0);
            }

            // --- صفحات عددی ---
            function setupPagination() {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                const paginationWrapper = document.getElementById('paginationWrapper');
                const nextBtn = document.getElementById('nextBtn');

                document.querySelectorAll('#paginationWrapper .page-number').forEach(el => el.remove());

                for (let i = 1; i <= pageCount; i++) {
                    const li = document.createElement('li');
                    li.className = `page-item page-number`;
                    li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                    li.addEventListener('click', e => {
                        e.preventDefault();
                        goToPage(i);
                    });
                    paginationWrapper.insertBefore(li, nextBtn);
                }
                highlightActivePage();
            }

            function highlightActivePage() {
                document.querySelectorAll('#paginationWrapper .page-number').forEach((li, index) => {
                    li.classList.toggle('active', index + 1 === currentPage);
                });
            }

            function goToPage(page) {
                const pageCount = Math.ceil(filteredRows.length / rowsPerPage);
                if (page < 1 || page > pageCount) return;
                currentPage = page;
                updateTableDisplay();
            }

            // --- دکمه‌های قبلی و بعدی ---
            document.getElementById('prevBtn').addEventListener('click', e => { e.preventDefault(); goToPage(currentPage - 1); });
            document.getElementById('nextBtn').addEventListener('click', e => { e.preventDefault(); goToPage(currentPage + 1); });

            // --- جستجوی کلی ---
            document.getElementById('globalSearch').addEventListener('input', function () {
                const term = this.value.trim().toLowerCase();
                filteredRows = allRows.filter(row => {
                    const cells = row.querySelectorAll('td:not(:last-child)');
                    return Array.from(cells).some(cell => cell.textContent.toLowerCase().includes(term));
                });
                // مرتب‌سازی مجدد filteredRows
                filteredRows = sortRowsByDateDescending(filteredRows);
                currentPage = 1;
                setupPagination();
                updateTableDisplay();
            });

            // --- اضافه کردن ردیف جدید ---
            window.addNewRow = function(pr) {
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td class="text-center fw-bold py-1 align-middle">${pr.RequestNumber}</td>
                    <td class="text-center py-1 align-middle">${pr.RequestDate}</td>
                    <td class="text-center py-1 align-middle">${pr.RequestTypeName}</td>
                    <td class="text-center py-1 align-middle">${pr.Title}</td>
                    <td class="text-center py-1 align-middle">${pr.ItemsCount}</td>
                    <td class="text-center py-1 align-middle">${pr.StatusDescription}</td>
                    <td class="text-center py-1 align-middle">
                        <div class="d-flex justify-content-center gap-1">
                            <a class="btn btn-sm btn-outline-warning px-1" style="font-size: 0.75rem; min-width: 26px; height: 26px;" title="ویرایش" href="/PurchaseRequest/Edit/${pr.Id}">
                                <i class="fas fa-edit"></i>
                            </a>
                            <form action="/PurchaseRequest/Delete" method="post" class="d-inline">
                                <input type="hidden" name="id" value="${pr.Id}" />
                                <button type="submit" class="btn btn-sm btn-outline-danger px-1" style="font-size: 0.75rem; min-width: 26px; height: 26px;" title="حذف" onclick="return confirm('آیا از حذف این درخواست مطمئن هستید؟');">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                        </div>
                    </td>
                `;
                tbody.appendChild(newRow); // ابتدا اضافه کن به انتها

                // بروزرسانی آرایه‌ها و مرتب‌سازی مجدد
                allRows = Array.from(tbody.querySelectorAll('tr'));
                allRows = sortRowsByDateDescending(allRows);
                filteredRows = [...allRows];

                // رندر مجدد tbody با ترتیب جدید (جدیدها بالا)
                tbody.innerHTML = '';
                allRows.forEach(row => tbody.appendChild(row));

                // هایلایت و اسکرول به ردیف جدید (که حالا در بالا است)
                const addedRow = allRows[0]; // چون جدیدترین بالا است
                addedRow.style.backgroundColor = '#d4edda';
                setTimeout(() => { addedRow.style.transition = 'background-color 1s ease'; addedRow.style.backgroundColor = ''; }, 2000);
                addedRow.scrollIntoView({ behavior: 'smooth', block: 'center' });

                setupPagination();
                updateTableDisplay();
            };

            // --- بررسی TempData ---
        @if (ViewBag.NewPurchaseRequestId != null)
        {
            <text>
                        const tempRow = allRows.find(row => {
                            const input = row.querySelector('form input[name="id"]');
                            return input && input.value == '@ViewBag.NewPurchaseRequestId';
                        });
                        if (tempRow) {
                            // فقط هایلایت و اسکرول، چون مرتب‌سازی قبلاً اعمال شده
                            tempRow.style.backgroundColor = '#d4edda';
                            setTimeout(() => { tempRow.style.transition = 'background-color 1s ease'; tempRow.style.backgroundColor = ''; }, 2000);
                            tempRow.scrollIntoView({ behavior: 'smooth', block: 'center' });
                            setupPagination();
                            updateTableDisplay();
                        }
            </text>
        }

            // --- مقداردهی اولیه ---
            setupPagination();
            updateTableDisplay();
        });
    </script>
}